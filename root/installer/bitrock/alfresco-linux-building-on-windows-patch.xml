<component>
    <name>alfrescolinuxbuildingonwindowspatch</name>
    <show>0</show>
    <selected>1</selected>
    <functionDefinitionList>
        <actionDefinition name="postgresCreateSymLinksLinuxBuildingFromWindows">
            <actionList>
        
               <deleteFile path="${installdir}/java/man/ja" />
                <createSymLink target="ja_JP.eucJP" linkName="${installdir}/java/man/ja" >
                     <ruleList>
                         <fileTest path="${installdir}/java/man/ja_JP.eucJP" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/java/bin/ControlPanel" />
                <createSymLink target="./jcontrol" linkName="${installdir}/java/bin/ControlPanel" >
                     <ruleList>
                         <fileTest path="${installdir}/java/bin/./jcontrol" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/java/jre/lib/i386/server/libjsig.so" />
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/i386/server/libjsig.so" >
                     <ruleList>
                         <fileTest path="${installdir}/java/jre/lib/i386/server/../libjsig.so" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/java/jre/lib/i386/client/libjsig.so" />
                <createSymLink target="../libjsig.so" linkName="${installdir}/java/jre/lib/i386/client/libjsig.so" >
                     <ruleList>
                         <fileTest path="${installdir}/java/jre/lib/i386/client/../libjsig.so" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/java/jre/bin/ControlPanel" />
                <createSymLink target="./jcontrol" linkName="${installdir}/java/jre/bin/ControlPanel" >
                     <ruleList>
                         <fileTest path="${installdir}/java/jre/bin/./jcontrol" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/java/jre/javaws/javaws" />
                <createSymLink target="../bin/javaws" linkName="${installdir}/java/jre/javaws/javaws" >
                     <ruleList>
                         <fileTest path="${installdir}/java/jre/javaws/../bin/javaws" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/openoffice/basis3.2/ure-link" />
                <createSymLink target="../ure" linkName="${installdir}/openoffice/basis3.2/ure-link" >
                     <ruleList>
                         <fileTest path="${installdir}/openoffice/basis3.2/../ure" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/openoffice/basis3.2/program/libicudata.so.40" />
                <createSymLink target="libicudata.so.40.1" linkName="${installdir}/openoffice/basis3.2/program/libicudata.so.40" >
                     <ruleList>
                         <fileTest path="${installdir}/openoffice/basis3.2/program/libicudata.so.40.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/openoffice/basis3.2/program/libicui18n.so.40" />
                <createSymLink target="libicui18n.so.40.1" linkName="${installdir}/openoffice/basis3.2/program/libicui18n.so.40" >
                     <ruleList>
                         <fileTest path="${installdir}/openoffice/basis3.2/program/libicui18n.so.40.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/openoffice/basis3.2/program/libicuuc.so.40" />
                <createSymLink target="libicuuc.so.40.1" linkName="${installdir}/openoffice/basis3.2/program/libicuuc.so.40" >
                     <ruleList>
                         <fileTest path="${installdir}/openoffice/basis3.2/program/libicuuc.so.40.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/openoffice/basis3.2/program/libicule.so.40" />
                <createSymLink target="libicule.so.40.1" linkName="${installdir}/openoffice/basis3.2/program/libicule.so.40" >
                     <ruleList>
                         <fileTest path="${installdir}/openoffice/basis3.2/program/libicule.so.40.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/openoffice/basis-link" />
                <createSymLink target="basis3.2" linkName="${installdir}/openoffice/basis-link" >
                     <ruleList>
                         <fileTest path="${installdir}/openoffice/basis3.2" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/openoffice/ure/bin/regcomp" />
                <createSymLink target="startup.sh" linkName="${installdir}/openoffice/ure/bin/regcomp" >
                     <ruleList>
                         <fileTest path="${installdir}/openoffice/ure/bin/startup.sh" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/openoffice/ure/bin/uno" />
                <createSymLink target="startup.sh" linkName="${installdir}/openoffice/ure/bin/uno" >
                     <ruleList>
                         <fileTest path="${installdir}/openoffice/ure/bin/startup.sh" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/lib/libpgtypes.so" />
                <createSymLink target="libpgtypes.so.3.1" linkName="${installdir}/postgresql/lib/libpgtypes.so" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/lib/libpgtypes.so.3.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/lib/libecpg_compat.so.3" />
                <createSymLink target="libecpg_compat.so.3.2" linkName="${installdir}/postgresql/lib/libecpg_compat.so.3" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/lib/libecpg_compat.so.3.2" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/lib/libpgtypes.so.3" />
                <createSymLink target="libpgtypes.so.3.1" linkName="${installdir}/postgresql/lib/libpgtypes.so.3" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/lib/libpgtypes.so.3.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/lib/libpq.so.5" />
                <createSymLink target="libpq.so.5.3" linkName="${installdir}/postgresql/lib/libpq.so.5" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/lib/libpq.so.5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/lib/libecpg.so" />
                <createSymLink target="libecpg.so.6.2" linkName="${installdir}/postgresql/lib/libecpg.so" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/lib/libecpg.so.6.2" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/lib/libpq.so" />
                <createSymLink target="libpq.so.5.3" linkName="${installdir}/postgresql/lib/libpq.so" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/lib/libpq.so.5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/lib/libecpg_compat.so" />
                <createSymLink target="libecpg_compat.so.3.2" linkName="${installdir}/postgresql/lib/libecpg_compat.so" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/lib/libecpg_compat.so.3.2" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/lib/libecpg.so.6" />
                <createSymLink target="libecpg.so.6.2" linkName="${installdir}/postgresql/lib/libecpg.so.6" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/lib/libecpg.so.6.2" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/postgresql/bin/postmaster" />
                <createSymLink target="postgres" linkName="${installdir}/postgresql/bin/postmaster" >
                     <ruleList>
                         <fileTest path="${installdir}/postgresql/bin/postgres" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man1/ps2pdf13.1" />
                <createSymLink target="ps2pdf.1" linkName="${installdir}/common/man/man1/ps2pdf13.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man1/ps2pdf.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man1/ps2pdf12.1" />
                <createSymLink target="ps2pdf.1" linkName="${installdir}/common/man/man1/ps2pdf12.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man1/ps2pdf.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man1/reset.1.gz" />
                <createSymLink target="tset.1.gz" linkName="${installdir}/common/man/man1/reset.1.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man1/tset.1.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man1/eps2eps.1" />
                <createSymLink target="ps2ps.1" linkName="${installdir}/common/man/man1/eps2eps.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man1/ps2ps.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/ripoffline.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/ripoffline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wadd_wchstr.3x.gz" />
                <createSymLink target="curs_add_wchstr.3x.gz" linkName="${installdir}/common/man/man3/wadd_wchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/has_il.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/has_il.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mouse_trafo.3x.gz" />
                <createSymLink target="curs_mouse.3x.gz" linkName="${installdir}/common/man/man3/mouse_trafo.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_mouse.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/init_pair.3x.gz" />
                <createSymLink target="curs_color.3x.gz" linkName="${installdir}/common/man/man3/init_pair.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_color.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_form_opts.3x.gz" />
                <createSymLink target="form_opts.3x.gz" linkName="${installdir}/common/man/man3/set_form_opts.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/pecho_wchar.3x.gz" />
                <createSymLink target="curs_pad.3x.gz" linkName="${installdir}/common/man/man3/pecho_wchar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_pad.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/use_env.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/use_env.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/free_form.3x.gz" />
                <createSymLink target="form_new.3x.gz" linkName="${installdir}/common/man/man3/free_form.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvchgat.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/mvchgat.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinchstr.3x.gz" />
                <createSymLink target="curs_inchstr.3x.gz" linkName="${installdir}/common/man/man3/mvinchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/dupwin.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/dupwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_touch.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_touch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/werase.3x.gz" />
                <createSymLink target="curs_clear.3x.gz" linkName="${installdir}/common/man/man3/werase.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_clear.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/use_legacy_coding.3x.gz" />
                <createSymLink target="legacy_coding.3x.gz" linkName="${installdir}/common/man/man3/use_legacy_coding.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/legacy_coding.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/new_form.3x.gz" />
                <createSymLink target="form_new.3x.gz" linkName="${installdir}/common/man/man3/new_form.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winchstr.3x.gz" />
                <createSymLink target="curs_inchstr.3x.gz" linkName="${installdir}/common/man/man3/winchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_term.3x.gz" />
                <createSymLink target="menu_hook.3x.gz" linkName="${installdir}/common/man/man3/set_menu_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winch.3x.gz" />
                <createSymLink target="curs_inch.3x.gz" linkName="${installdir}/common/man/man3/winch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_back.3x.gz" />
                <createSymLink target="form_field_attributes.3x.gz" linkName="${installdir}/common/man/man3/set_field_back.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_set.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvscanw.3x.gz" />
                <createSymLink target="curs_scanw.3x.gz" linkName="${installdir}/common/man/man3/mvscanw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scanw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/unget_wch.3x.gz" />
                <createSymLink target="curs_get_wch.3x.gz" linkName="${installdir}/common/man/man3/unget_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vid_puts.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/vid_puts.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/halfdelay.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/halfdelay.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/bkgdset.3x.gz" />
                <createSymLink target="curs_bkgd.3x.gz" linkName="${installdir}/common/man/man3/bkgdset.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvins_nwstr.3x.gz" />
                <createSymLink target="curs_ins_wstr.3x.gz" linkName="${installdir}/common/man/man3/mvins_nwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_opts.3x.gz" />
                <createSymLink target="form_field_opts.3x.gz" linkName="${installdir}/common/man/man3/set_field_opts.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tigetstr.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/tigetstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winwstr.3x.gz" />
                <createSymLink target="curs_inwstr.3x.gz" linkName="${installdir}/common/man/man3/winwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinnstr.3x.gz" />
                <createSymLink target="curs_instr.3x.gz" linkName="${installdir}/common/man/man3/mvinnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_instr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wnoutrefresh.3x.gz" />
                <createSymLink target="curs_refresh.3x.gz" linkName="${installdir}/common/man/man3/wnoutrefresh.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_refresh.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/move_field.3x.gz" />
                <createSymLink target="form_field.3x.gz" linkName="${installdir}/common/man/man3/move_field.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getbegyx.3x.gz" />
                <createSymLink target="curs_getyx.3x.gz" linkName="${installdir}/common/man/man3/getbegyx.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getyx.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_term.3x.gz" />
                <createSymLink target="form_hook.3x.gz" linkName="${installdir}/common/man/man3/field_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wgetch.3x.gz" />
                <createSymLink target="curs_getch.3x.gz" linkName="${installdir}/common/man/man3/wgetch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vwscanw.3x.gz" />
                <createSymLink target="curs_scanw.3x.gz" linkName="${installdir}/common/man/man3/vwscanw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scanw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/hline.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/hline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/new_panel.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/new_panel.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/key_name.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/key_name.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_restore.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_restore.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/reset_shell_mode.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/reset_shell_mode.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/pos_menu_cursor.3x.gz" />
                <createSymLink target="menu_cursor.3x.gz" linkName="${installdir}/common/man/man3/pos_menu_cursor.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_cursor.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/trace.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/trace.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tgetnum.3x.gz" />
                <createSymLink target="curs_termcap.3x.gz" linkName="${installdir}/common/man/man3/tgetnum.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termcap.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wdelch.3x.gz" />
                <createSymLink target="curs_delch.3x.gz" linkName="${installdir}/common/man/man3/wdelch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_delch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvin_wchstr.3x.gz" />
                <createSymLink target="curs_in_wchstr.3x.gz" linkName="${installdir}/common/man/man3/mvin_wchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scr_dump.3x.gz" />
                <createSymLink target="curs_scr_dump.3x.gz" linkName="${installdir}/common/man/man3/scr_dump.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scr_dump.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_request_by_name.3x.gz" />
                <createSymLink target="menu_requestname.3x.gz" linkName="${installdir}/common/man/man3/menu_request_by_name.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_requestname.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/clrtoeol.3x.gz" />
                <createSymLink target="curs_clear.3x.gz" linkName="${installdir}/common/man/man3/clrtoeol.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_clear.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/new_item.3x.gz" />
                <createSymLink target="mitem_new.3x.gz" linkName="${installdir}/common/man/man3/new_item.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_term.3x.gz" />
                <createSymLink target="menu_hook.3x.gz" linkName="${installdir}/common/man/man3/menu_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/intrflush.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/intrflush.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvadd_wchstr.3x.gz" />
                <createSymLink target="curs_add_wchstr.3x.gz" linkName="${installdir}/common/man/man3/mvadd_wchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwaddwstr.3x.gz" />
                <createSymLink target="curs_addwstr.3x.gz" linkName="${installdir}/common/man/man3/mvwaddwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvget_wstr.3x.gz" />
                <createSymLink target="curs_get_wstr.3x.gz" linkName="${installdir}/common/man/man3/mvget_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wins_wch.3x.gz" />
                <createSymLink target="curs_ins_wch.3x.gz" linkName="${installdir}/common/man/man3/wins_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wvline_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/wvline_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/attr_on.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/attr_on.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wclrtobot.3x.gz" />
                <createSymLink target="curs_clear.3x.gz" linkName="${installdir}/common/man/man3/wclrtobot.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_clear.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_back.3x.gz" />
                <createSymLink target="menu_attributes.3x.gz" linkName="${installdir}/common/man/man3/set_menu_back.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wattr_off.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wattr_off.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mousemask.3x.gz" />
                <createSymLink target="curs_mouse.3x.gz" linkName="${installdir}/common/man/man3/mousemask.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_mouse.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getch.3x.gz" />
                <createSymLink target="curs_getch.3x.gz" linkName="${installdir}/common/man/man3/getch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/reset_prog_mode.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/reset_prog_mode.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwadd_wchnstr.3x.gz" />
                <createSymLink target="curs_add_wchstr.3x.gz" linkName="${installdir}/common/man/man3/mvwadd_wchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wenclose.3x.gz" />
                <createSymLink target="curs_mouse.3x.gz" linkName="${installdir}/common/man/man3/wenclose.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_mouse.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/overwrite.3x.gz" />
                <createSymLink target="curs_overlay.3x.gz" linkName="${installdir}/common/man/man3/overwrite.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_overlay.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/curses_version.3x.gz" />
                <createSymLink target="curs_extend.3x.gz" linkName="${installdir}/common/man/man3/curses_version.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_extend.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinwstr.3x.gz" />
                <createSymLink target="curs_inwstr.3x.gz" linkName="${installdir}/common/man/man3/mvwinwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/termname.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/termname.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvhline_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/mvhline_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_fieldtype_arg.3x.gz" />
                <createSymLink target="form_fieldtype.3x.gz" linkName="${installdir}/common/man/man3/set_fieldtype_arg.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_fieldtype.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getyx.3x.gz" />
                <createSymLink target="curs_getyx.3x.gz" linkName="${installdir}/common/man/man3/getyx.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getyx.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_sub.3x.gz" />
                <createSymLink target="menu_win.3x.gz" linkName="${installdir}/common/man/man3/set_menu_sub.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_win.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/move_panel.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/move_panel.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/newwin.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/newwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vidattr.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/vidattr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/panel_window.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/panel_window.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/hline_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/hline_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wattr_set.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wattr_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/new_page.3x.gz" />
                <createSymLink target="form_new_page.3x.gz" linkName="${installdir}/common/man/man3/new_page.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_new_page.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvin_wch.3x.gz" />
                <createSymLink target="curs_in_wch.3x.gz" linkName="${installdir}/common/man/man3/mvin_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vidputs.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/vidputs.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_opts_on.3x.gz" />
                <createSymLink target="form_field_opts.3x.gz" linkName="${installdir}/common/man/man3/field_opts_on.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_attr_off.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_attr_off.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_type.3x.gz" />
                <createSymLink target="form_field_validation.3x.gz" linkName="${installdir}/common/man/man3/set_field_type.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_validation.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/dup_field.3x.gz" />
                <createSymLink target="form_field_new.3x.gz" linkName="${installdir}/common/man/man3/dup_field.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winnwstr.3x.gz" />
                <createSymLink target="curs_inwstr.3x.gz" linkName="${installdir}/common/man/man3/winnwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tgoto.3x.gz" />
                <createSymLink target="curs_termcap.3x.gz" linkName="${installdir}/common/man/man3/tgoto.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termcap.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/setscrreg.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/setscrreg.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinnwstr.3x.gz" />
                <createSymLink target="curs_inwstr.3x.gz" linkName="${installdir}/common/man/man3/mvwinnwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/standout.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/standout.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwaddnwstr.3x.gz" />
                <createSymLink target="curs_addwstr.3x.gz" linkName="${installdir}/common/man/man3/mvwaddnwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_opts_on.3x.gz" />
                <createSymLink target="menu_opts.3x.gz" linkName="${installdir}/common/man/man3/menu_opts_on.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/insch.3x.gz" />
                <createSymLink target="curs_insch.3x.gz" linkName="${installdir}/common/man/man3/insch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_type.3x.gz" />
                <createSymLink target="form_field_validation.3x.gz" linkName="${installdir}/common/man/man3/field_type.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_validation.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/addstr.3x.gz" />
                <createSymLink target="curs_addstr.3x.gz" linkName="${installdir}/common/man/man3/addstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_form_term.3x.gz" />
                <createSymLink target="form_hook.3x.gz" linkName="${installdir}/common/man/man3/set_form_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/newpad.3x.gz" />
                <createSymLink target="curs_pad.3x.gz" linkName="${installdir}/common/man/man3/newpad.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_pad.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_items.3x.gz" />
                <createSymLink target="menu_items.3x.gz" linkName="${installdir}/common/man/man3/set_menu_items.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_items.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wstandend.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wstandend.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/win_wchnstr.3x.gz" />
                <createSymLink target="curs_in_wchstr.3x.gz" linkName="${installdir}/common/man/man3/win_wchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/nocbreak.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/nocbreak.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/flash.3x.gz" />
                <createSymLink target="curs_beep.3x.gz" linkName="${installdir}/common/man/man3/flash.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_beep.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_name.3x.gz" />
                <createSymLink target="mitem_name.3x.gz" linkName="${installdir}/common/man/man3/item_name.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_name.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wscrl.3x.gz" />
                <createSymLink target="curs_scroll.3x.gz" linkName="${installdir}/common/man/man3/wscrl.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scroll.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/post_form.3x.gz" />
                <createSymLink target="form_post.3x.gz" linkName="${installdir}/common/man/man3/post_form.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_post.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/overlay.3x.gz" />
                <createSymLink target="curs_overlay.3x.gz" linkName="${installdir}/common/man/man3/overlay.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_overlay.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_clear.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_clear.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/noraw.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/noraw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwaddchnstr.3x.gz" />
                <createSymLink target="curs_addchstr.3x.gz" linkName="${installdir}/common/man/man3/mvwaddchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinchstr.3x.gz" />
                <createSymLink target="curs_inchstr.3x.gz" linkName="${installdir}/common/man/man3/mvwinchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_tracechtype.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_tracechtype.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_tracechar.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_tracechar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvprintw.3x.gz" />
                <createSymLink target="curs_printw.3x.gz" linkName="${installdir}/common/man/man3/mvprintw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_printw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wattroff.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wattroff.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/ins_wch.3x.gz" />
                <createSymLink target="curs_ins_wch.3x.gz" linkName="${installdir}/common/man/man3/ins_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_index.3x.gz" />
                <createSymLink target="mitem_current.3x.gz" linkName="${installdir}/common/man/man3/item_index.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_current.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scrl.3x.gz" />
                <createSymLink target="curs_scroll.3x.gz" linkName="${installdir}/common/man/man3/scrl.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scroll.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinnstr.3x.gz" />
                <createSymLink target="curs_instr.3x.gz" linkName="${installdir}/common/man/man3/mvwinnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_instr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_tracedump.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_tracedump.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wgetnstr.3x.gz" />
                <createSymLink target="curs_getstr.3x.gz" linkName="${installdir}/common/man/man3/wgetnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_userptr.3x.gz" />
                <createSymLink target="form_field_userptr.3x.gz" linkName="${installdir}/common/man/man3/set_field_userptr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_userptr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/baudrate.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/baudrate.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wvline.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/wvline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwgetn_wstr.3x.gz" />
                <createSymLink target="curs_get_wstr.3x.gz" linkName="${installdir}/common/man/man3/mvwgetn_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwget_wch.3x.gz" />
                <createSymLink target="curs_get_wch.3x.gz" linkName="${installdir}/common/man/man3/mvwget_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/unctrl.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/unctrl.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/add_wchnstr.3x.gz" />
                <createSymLink target="curs_add_wchstr.3x.gz" linkName="${installdir}/common/man/man3/add_wchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvgetch.3x.gz" />
                <createSymLink target="curs_getch.3x.gz" linkName="${installdir}/common/man/man3/mvgetch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_panel_userptr.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/set_panel_userptr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwadd_wchstr.3x.gz" />
                <createSymLink target="curs_add_wchstr.3x.gz" linkName="${installdir}/common/man/man3/mvwadd_wchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_just.3x.gz" />
                <createSymLink target="form_field_just.3x.gz" linkName="${installdir}/common/man/man3/field_just.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_just.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wsyncdown.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/wsyncdown.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wtimeout.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/wtimeout.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/putp.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/putp.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_init.3x.gz" />
                <createSymLink target="menu_hook.3x.gz" linkName="${installdir}/common/man/man3/menu_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/clrtobot.3x.gz" />
                <createSymLink target="curs_clear.3x.gz" linkName="${installdir}/common/man/man3/clrtobot.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_clear.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinnwstr.3x.gz" />
                <createSymLink target="curs_inwstr.3x.gz" linkName="${installdir}/common/man/man3/mvinnwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/current_field.3x.gz" />
                <createSymLink target="form_page.3x.gz" linkName="${installdir}/common/man/man3/current_field.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_page.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/insertln.3x.gz" />
                <createSymLink target="curs_deleteln.3x.gz" linkName="${installdir}/common/man/man3/insertln.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_deleteln.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/hide_panel.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/hide_panel.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_init.3x.gz" />
                <createSymLink target="form_hook.3x.gz" linkName="${installdir}/common/man/man3/field_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_curterm.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/set_curterm.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvhline.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/mvhline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinsnstr.3x.gz" />
                <createSymLink target="curs_insstr.3x.gz" linkName="${installdir}/common/man/man3/mvinsnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/waddstr.3x.gz" />
                <createSymLink target="curs_addstr.3x.gz" linkName="${installdir}/common/man/man3/waddstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwadd_wch.3x.gz" />
                <createSymLink target="curs_add_wch.3x.gz" linkName="${installdir}/common/man/man3/mvwadd_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/in_wchstr.3x.gz" />
                <createSymLink target="curs_in_wchstr.3x.gz" linkName="${installdir}/common/man/man3/in_wchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_status.3x.gz" />
                <createSymLink target="form_field_buffer.3x.gz" linkName="${installdir}/common/man/man3/set_field_status.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_buffer.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wadd_wch.3x.gz" />
                <createSymLink target="curs_add_wch.3x.gz" linkName="${installdir}/common/man/man3/wadd_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vw_printw.3x.gz" />
                <createSymLink target="curs_printw.3x.gz" linkName="${installdir}/common/man/man3/vw_printw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_printw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/addwstr.3x.gz" />
                <createSymLink target="curs_addwstr.3x.gz" linkName="${installdir}/common/man/man3/addwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_pattern.3x.gz" />
                <createSymLink target="menu_pattern.3x.gz" linkName="${installdir}/common/man/man3/set_menu_pattern.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_pattern.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvaddchstr.3x.gz" />
                <createSymLink target="curs_addchstr.3x.gz" linkName="${installdir}/common/man/man3/mvaddchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vwprintw.3x.gz" />
                <createSymLink target="curs_printw.3x.gz" linkName="${installdir}/common/man/man3/vwprintw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_printw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wgetn_wstr.3x.gz" />
                <createSymLink target="curs_get_wstr.3x.gz" linkName="${installdir}/common/man/man3/wgetn_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wprintw.3x.gz" />
                <createSymLink target="curs_printw.3x.gz" linkName="${installdir}/common/man/man3/wprintw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_printw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/win_wchstr.3x.gz" />
                <createSymLink target="curs_in_wchstr.3x.gz" linkName="${installdir}/common/man/man3/win_wchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_tracef.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_tracef.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_opts_on.3x.gz" />
                <createSymLink target="mitem_opts.3x.gz" linkName="${installdir}/common/man/man3/item_opts_on.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvdelch.3x.gz" />
                <createSymLink target="curs_delch.3x.gz" linkName="${installdir}/common/man/man3/mvdelch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_delch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_pad.3x.gz" />
                <createSymLink target="form_field_attributes.3x.gz" linkName="${installdir}/common/man/man3/field_pad.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getparyx.3x.gz" />
                <createSymLink target="curs_getyx.3x.gz" linkName="${installdir}/common/man/man3/getparyx.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getyx.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_color.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_color.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_userptr.3x.gz" />
                <createSymLink target="form_field_userptr.3x.gz" linkName="${installdir}/common/man/man3/field_userptr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_userptr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scale_form.3x.gz" />
                <createSymLink target="form_win.3x.gz" linkName="${installdir}/common/man/man3/scale_form.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_win.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/idlok.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/idlok.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_item_term.3x.gz" />
                <createSymLink target="menu_hook.3x.gz" linkName="${installdir}/common/man/man3/set_item_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/attr_get.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/attr_get.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wchgat.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wchgat.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_spacing.3x.gz" />
                <createSymLink target="menu_spacing.3x.gz" linkName="${installdir}/common/man/man3/set_menu_spacing.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_spacing.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/top_row.3x.gz" />
                <createSymLink target="mitem_current.3x.gz" linkName="${installdir}/common/man/man3/top_row.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_current.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wtouchln.3x.gz" />
                <createSymLink target="curs_touch.3x.gz" linkName="${installdir}/common/man/man3/wtouchln.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_touch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwaddstr.3x.gz" />
                <createSymLink target="curs_addstr.3x.gz" linkName="${installdir}/common/man/man3/mvwaddstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_new_page.3x.gz" />
                <createSymLink target="form_new_page.3x.gz" linkName="${installdir}/common/man/man3/set_new_page.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_new_page.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tgetstr.3x.gz" />
                <createSymLink target="curs_termcap.3x.gz" linkName="${installdir}/common/man/man3/tgetstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termcap.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinstr.3x.gz" />
                <createSymLink target="curs_instr.3x.gz" linkName="${installdir}/common/man/man3/mvwinstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_instr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/beep.3x.gz" />
                <createSymLink target="curs_beep.3x.gz" linkName="${installdir}/common/man/man3/beep.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_beep.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwvline_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/mvwvline_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_opts.3x.gz" />
                <createSymLink target="menu_opts.3x.gz" linkName="${installdir}/common/man/man3/set_menu_opts.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/has_colors.3x.gz" />
                <createSymLink target="curs_color.3x.gz" linkName="${installdir}/common/man/man3/has_colors.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_color.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/nofilter.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/nofilter.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_count.3x.gz" />
                <createSymLink target="menu_items.3x.gz" linkName="${installdir}/common/man/man3/item_count.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_items.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/free_menu.3x.gz" />
                <createSymLink target="menu_new.3x.gz" linkName="${installdir}/common/man/man3/free_menu.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/touchwin.3x.gz" />
                <createSymLink target="curs_touch.3x.gz" linkName="${installdir}/common/man/man3/touchwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_touch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/border.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/border.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/echochar.3x.gz" />
                <createSymLink target="curs_addch.3x.gz" linkName="${installdir}/common/man/man3/echochar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_attr.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_attr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/replace_panel.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/replace_panel.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/is_term_resized.3x.gz" />
                <createSymLink target="resizeterm.3x.gz" linkName="${installdir}/common/man/man3/is_term_resized.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/resizeterm.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinsnstr.3x.gz" />
                <createSymLink target="curs_insstr.3x.gz" linkName="${installdir}/common/man/man3/mvwinsnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getwin.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/getwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/longname.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/longname.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwprintw.3x.gz" />
                <createSymLink target="curs_printw.3x.gz" linkName="${installdir}/common/man/man3/mvwprintw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_printw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/savetty.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/savetty.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/noecho.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/noecho.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/addchstr.3x.gz" />
                <createSymLink target="curs_addchstr.3x.gz" linkName="${installdir}/common/man/man3/addchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/termattrs.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/termattrs.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/new_menu.3x.gz" />
                <createSymLink target="menu_new.3x.gz" linkName="${installdir}/common/man/man3/new_menu.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wbkgd.3x.gz" />
                <createSymLink target="curs_bkgd.3x.gz" linkName="${installdir}/common/man/man3/wbkgd.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/form_opts_on.3x.gz" />
                <createSymLink target="form_opts.3x.gz" linkName="${installdir}/common/man/man3/form_opts_on.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_attroff.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_attroff.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_index.3x.gz" />
                <createSymLink target="form_page.3x.gz" linkName="${installdir}/common/man/man3/field_index.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_page.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/setcchar.3x.gz" />
                <createSymLink target="curs_getcchar.3x.gz" linkName="${installdir}/common/man/man3/setcchar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getcchar.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wins_wstr.3x.gz" />
                <createSymLink target="curs_ins_wstr.3x.gz" linkName="${installdir}/common/man/man3/wins_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_opts.3x.gz" />
                <createSymLink target="form_field_opts.3x.gz" linkName="${installdir}/common/man/man3/field_opts.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/unpost_form.3x.gz" />
                <createSymLink target="form_post.3x.gz" linkName="${installdir}/common/man/man3/unpost_form.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_post.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scale_menu.3x.gz" />
                <createSymLink target="menu_win.3x.gz" linkName="${installdir}/common/man/man3/scale_menu.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_win.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_tracemouse.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_tracemouse.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwin_wchnstr.3x.gz" />
                <createSymLink target="curs_in_wchstr.3x.gz" linkName="${installdir}/common/man/man3/mvwin_wchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_pad.3x.gz" />
                <createSymLink target="form_field_attributes.3x.gz" linkName="${installdir}/common/man/man3/set_field_pad.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwin.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/mvwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_sub.3x.gz" />
                <createSymLink target="menu_win.3x.gz" linkName="${installdir}/common/man/man3/menu_sub.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_win.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_opts_off.3x.gz" />
                <createSymLink target="menu_opts.3x.gz" linkName="${installdir}/common/man/man3/menu_opts_off.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/refresh.3x.gz" />
                <createSymLink target="curs_refresh.3x.gz" linkName="${installdir}/common/man/man3/refresh.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_refresh.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/setupterm.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/setupterm.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/start_color.3x.gz" />
                <createSymLink target="curs_color.3x.gz" linkName="${installdir}/common/man/man3/start_color.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_color.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinstr.3x.gz" />
                <createSymLink target="curs_instr.3x.gz" linkName="${installdir}/common/man/man3/mvinstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_instr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvaddnwstr.3x.gz" />
                <createSymLink target="curs_addwstr.3x.gz" linkName="${installdir}/common/man/man3/mvaddnwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/noqiflush.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/noqiflush.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tigetnum.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/tigetnum.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/can_change_color.3x.gz" />
                <createSymLink target="curs_color.3x.gz" linkName="${installdir}/common/man/man3/can_change_color.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_color.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_just.3x.gz" />
                <createSymLink target="form_field_just.3x.gz" linkName="${installdir}/common/man/man3/set_field_just.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_just.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwaddnstr.3x.gz" />
                <createSymLink target="curs_addstr.3x.gz" linkName="${installdir}/common/man/man3/mvwaddnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/data_ahead.3x.gz" />
                <createSymLink target="form_data.3x.gz" linkName="${installdir}/common/man/man3/data_ahead.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_data.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winstr.3x.gz" />
                <createSymLink target="curs_instr.3x.gz" linkName="${installdir}/common/man/man3/winstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_instr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/copywin.3x.gz" />
                <createSymLink target="curs_overlay.3x.gz" linkName="${installdir}/common/man/man3/copywin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_overlay.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getnstr.3x.gz" />
                <createSymLink target="curs_getstr.3x.gz" linkName="${installdir}/common/man/man3/getnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wattr_get.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wattr_get.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wmouse_trafo.3x.gz" />
                <createSymLink target="curs_mouse.3x.gz" linkName="${installdir}/common/man/man3/wmouse_trafo.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_mouse.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/napms.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/napms.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_request_name.3x.gz" />
                <createSymLink target="menu_requestname.3x.gz" linkName="${installdir}/common/man/man3/menu_request_name.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_requestname.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_init.3x.gz" />
                <createSymLink target="form_hook.3x.gz" linkName="${installdir}/common/man/man3/set_field_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winchnstr.3x.gz" />
                <createSymLink target="curs_inchstr.3x.gz" linkName="${installdir}/common/man/man3/winchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winsstr.3x.gz" />
                <createSymLink target="curs_insstr.3x.gz" linkName="${installdir}/common/man/man3/winsstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/use_default_colors.3x.gz" />
                <createSymLink target="default_colors.3x.gz" linkName="${installdir}/common/man/man3/use_default_colors.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/default_colors.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/killchar.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/killchar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_pad.3x.gz" />
                <createSymLink target="menu_attributes.3x.gz" linkName="${installdir}/common/man/man3/set_menu_pad.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mcprint.3x.gz" />
                <createSymLink target="curs_print.3x.gz" linkName="${installdir}/common/man/man3/mcprint.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_print.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/waddwstr.3x.gz" />
                <createSymLink target="curs_addwstr.3x.gz" linkName="${installdir}/common/man/man3/waddwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winnstr.3x.gz" />
                <createSymLink target="curs_instr.3x.gz" linkName="${installdir}/common/man/man3/winnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_instr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wcursyncup.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/wcursyncup.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_form_win.3x.gz" />
                <createSymLink target="form_win.3x.gz" linkName="${installdir}/common/man/man3/set_form_win.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_win.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/bkgd.3x.gz" />
                <createSymLink target="curs_bkgd.3x.gz" linkName="${installdir}/common/man/man3/bkgd.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/pos_form_cursor.3x.gz" />
                <createSymLink target="form_cursor.3x.gz" linkName="${installdir}/common/man/man3/pos_form_cursor.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_cursor.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/attr_set.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/attr_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_visible.3x.gz" />
                <createSymLink target="mitem_visible.3x.gz" linkName="${installdir}/common/man/man3/item_visible.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_visible.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/box_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/box_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_form_page.3x.gz" />
                <createSymLink target="form_page.3x.gz" linkName="${installdir}/common/man/man3/set_form_page.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_page.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_fore.3x.gz" />
                <createSymLink target="menu_attributes.3x.gz" linkName="${installdir}/common/man/man3/menu_fore.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_description.3x.gz" />
                <createSymLink target="mitem_name.3x.gz" linkName="${installdir}/common/man/man3/item_description.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_name.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wechochar.3x.gz" />
                <createSymLink target="curs_addch.3x.gz" linkName="${installdir}/common/man/man3/wechochar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scrollok.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/scrollok.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/del_curterm.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/del_curterm.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_attr_set.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_attr_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_info.3x.gz" />
                <createSymLink target="form_field_info.3x.gz" linkName="${installdir}/common/man/man3/field_info.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_info.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/waddchstr.3x.gz" />
                <createSymLink target="curs_addchstr.3x.gz" linkName="${installdir}/common/man/man3/waddchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scroll.3x.gz" />
                <createSymLink target="curs_scroll.3x.gz" linkName="${installdir}/common/man/man3/scroll.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scroll.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/ins_wstr.3x.gz" />
                <createSymLink target="curs_ins_wstr.3x.gz" linkName="${installdir}/common/man/man3/ins_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/free_fieldtype.3x.gz" />
                <createSymLink target="form_fieldtype.3x.gz" linkName="${installdir}/common/man/man3/free_fieldtype.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_fieldtype.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_opts_off.3x.gz" />
                <createSymLink target="mitem_opts.3x.gz" linkName="${installdir}/common/man/man3/item_opts_off.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/win_wch.3x.gz" />
                <createSymLink target="curs_in_wch.3x.gz" linkName="${installdir}/common/man/man3/win_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwins_wstr.3x.gz" />
                <createSymLink target="curs_ins_wstr.3x.gz" linkName="${installdir}/common/man/man3/mvwins_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwhline.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/mvwhline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_grey.3x.gz" />
                <createSymLink target="menu_attributes.3x.gz" linkName="${installdir}/common/man/man3/menu_grey.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/killwchar.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/killwchar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwin_wchstr.3x.gz" />
                <createSymLink target="curs_in_wchstr.3x.gz" linkName="${installdir}/common/man/man3/mvwin_wchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/term_attrs.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/term_attrs.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_grey.3x.gz" />
                <createSymLink target="menu_attributes.3x.gz" linkName="${installdir}/common/man/man3/set_menu_grey.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/use_extended_names.3x.gz" />
                <createSymLink target="curs_extend.3x.gz" linkName="${installdir}/common/man/man3/use_extended_names.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_extend.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_win.3x.gz" />
                <createSymLink target="menu_win.3x.gz" linkName="${installdir}/common/man/man3/set_menu_win.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_win.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/insstr.3x.gz" />
                <createSymLink target="curs_insstr.3x.gz" linkName="${installdir}/common/man/man3/insstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/form_request_by_name.3x.gz" />
                <createSymLink target="form_requestname.3x.gz" linkName="${installdir}/common/man/man3/form_request_by_name.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_requestname.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/delch.3x.gz" />
                <createSymLink target="curs_delch.3x.gz" linkName="${installdir}/common/man/man3/delch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_delch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/show_panel.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/show_panel.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/form_sub.3x.gz" />
                <createSymLink target="form_win.3x.gz" linkName="${installdir}/common/man/man3/form_sub.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_win.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/standend.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/standend.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wcolor_set.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wcolor_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_term.3x.gz" />
                <createSymLink target="curs_initscr.3x.gz" linkName="${installdir}/common/man/man3/set_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_initscr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_refresh.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_refresh.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/inwstr.3x.gz" />
                <createSymLink target="curs_inwstr.3x.gz" linkName="${installdir}/common/man/man3/inwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/insnstr.3x.gz" />
                <createSymLink target="curs_insstr.3x.gz" linkName="${installdir}/common/man/man3/insnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/clear.3x.gz" />
                <createSymLink target="curs_clear.3x.gz" linkName="${installdir}/common/man/man3/clear.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_clear.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/touchline.3x.gz" />
                <createSymLink target="curs_touch.3x.gz" linkName="${installdir}/common/man/man3/touchline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_touch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwchgat.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/mvwchgat.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvins_wstr.3x.gz" />
                <createSymLink target="curs_ins_wstr.3x.gz" linkName="${installdir}/common/man/man3/mvins_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/move.3x.gz" />
                <createSymLink target="curs_move.3x.gz" linkName="${installdir}/common/man/man3/move.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_move.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_current_field.3x.gz" />
                <createSymLink target="form_page.3x.gz" linkName="${installdir}/common/man/man3/set_current_field.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_page.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/typeahead.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/typeahead.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/PAIR_NUMBER.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/PAIR_NUMBER.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wclrtoeol.3x.gz" />
                <createSymLink target="curs_clear.3x.gz" linkName="${installdir}/common/man/man3/wclrtoeol.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_clear.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/link_fieldtype.3x.gz" />
                <createSymLink target="form_fieldtype.3x.gz" linkName="${installdir}/common/man/man3/link_fieldtype.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_fieldtype.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/add_wchstr.3x.gz" />
                <createSymLink target="curs_add_wchstr.3x.gz" linkName="${installdir}/common/man/man3/add_wchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_current_item.3x.gz" />
                <createSymLink target="mitem_current.3x.gz" linkName="${installdir}/common/man/man3/set_current_item.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_current.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/clearok.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/clearok.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/ungetmouse.3x.gz" />
                <createSymLink target="curs_mouse.3x.gz" linkName="${installdir}/common/man/man3/ungetmouse.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_mouse.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/bkgrndset.3x.gz" />
                <createSymLink target="curs_bkgrnd.3x.gz" linkName="${installdir}/common/man/man3/bkgrndset.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgrnd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getn_wstr.3x.gz" />
                <createSymLink target="curs_get_wstr.3x.gz" linkName="${installdir}/common/man/man3/getn_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vline.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/vline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_init.3x.gz" />
                <createSymLink target="menu_hook.3x.gz" linkName="${installdir}/common/man/man3/set_menu_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/nodelay.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/nodelay.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wbkgrnd.3x.gz" />
                <createSymLink target="curs_bkgrnd.3x.gz" linkName="${installdir}/common/man/man3/wbkgrnd.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgrnd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/prefresh.3x.gz" />
                <createSymLink target="curs_pad.3x.gz" linkName="${installdir}/common/man/man3/prefresh.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_pad.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvin_wchnstr.3x.gz" />
                <createSymLink target="curs_in_wchstr.3x.gz" linkName="${installdir}/common/man/man3/mvin_wchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/bottom_panel.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/bottom_panel.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getstr.3x.gz" />
                <createSymLink target="curs_getstr.3x.gz" linkName="${installdir}/common/man/man3/getstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/in_wch.3x.gz" />
                <createSymLink target="curs_in_wch.3x.gz" linkName="${installdir}/common/man/man3/in_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wredrawln.3x.gz" />
                <createSymLink target="curs_refresh.3x.gz" linkName="${installdir}/common/man/man3/wredrawln.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_refresh.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvgetstr.3x.gz" />
                <createSymLink target="curs_getstr.3x.gz" linkName="${installdir}/common/man/man3/mvgetstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wborder_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/wborder_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_value.3x.gz" />
                <createSymLink target="mitem_value.3x.gz" linkName="${installdir}/common/man/man3/item_value.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_value.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_userptr.3x.gz" />
                <createSymLink target="mitem_userptr.3x.gz" linkName="${installdir}/common/man/man3/item_userptr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_userptr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/has_ic.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/has_ic.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/attroff.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/attroff.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/erasechar.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/erasechar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wsyncup.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/wsyncup.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mouseinterval.3x.gz" />
                <createSymLink target="curs_mouse.3x.gz" linkName="${installdir}/common/man/man3/mouseinterval.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_mouse.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_init.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/printw.3x.gz" />
                <createSymLink target="curs_printw.3x.gz" linkName="${installdir}/common/man/man3/printw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_printw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/redrawwin.3x.gz" />
                <createSymLink target="curs_refresh.3x.gz" linkName="${installdir}/common/man/man3/redrawwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_refresh.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/restartterm.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/restartterm.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/erase.3x.gz" />
                <createSymLink target="curs_clear.3x.gz" linkName="${installdir}/common/man/man3/erase.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_clear.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_form_init.3x.gz" />
                <createSymLink target="form_hook.3x.gz" linkName="${installdir}/common/man/man3/set_form_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/newterm.3x.gz" />
                <createSymLink target="curs_initscr.3x.gz" linkName="${installdir}/common/man/man3/newterm.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_initscr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_item_opts.3x.gz" />
                <createSymLink target="mitem_opts.3x.gz" linkName="${installdir}/common/man/man3/set_item_opts.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_format.3x.gz" />
                <createSymLink target="menu_format.3x.gz" linkName="${installdir}/common/man/man3/set_menu_format.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_format.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/pechochar.3x.gz" />
                <createSymLink target="curs_pad.3x.gz" linkName="${installdir}/common/man/man3/pechochar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_pad.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/subwin.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/subwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/attr_off.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/attr_off.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/del_panel.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/del_panel.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/innwstr.3x.gz" />
                <createSymLink target="curs_inwstr.3x.gz" linkName="${installdir}/common/man/man3/innwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/form_request_name.3x.gz" />
                <createSymLink target="form_requestname.3x.gz" linkName="${installdir}/common/man/man3/form_request_name.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_requestname.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvaddstr.3x.gz" />
                <createSymLink target="curs_addstr.3x.gz" linkName="${installdir}/common/man/man3/mvaddstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/panel_userptr.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/panel_userptr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvvline_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/mvvline_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvget_wch.3x.gz" />
                <createSymLink target="curs_get_wch.3x.gz" linkName="${installdir}/common/man/man3/mvget_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wdeleteln.3x.gz" />
                <createSymLink target="curs_deleteln.3x.gz" linkName="${installdir}/common/man/man3/wdeleteln.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_deleteln.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/filter.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/filter.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/qiflush.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/qiflush.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/initscr.3x.gz" />
                <createSymLink target="curs_initscr.3x.gz" linkName="${installdir}/common/man/man3/initscr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_initscr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wclear.3x.gz" />
                <createSymLink target="curs_clear.3x.gz" linkName="${installdir}/common/man/man3/wclear.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_clear.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinch.3x.gz" />
                <createSymLink target="curs_inch.3x.gz" linkName="${installdir}/common/man/man3/mvinch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/panel_above.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/panel_above.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_traceattr2.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_traceattr2.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/new_fieldtype.3x.gz" />
                <createSymLink target="form_fieldtype.3x.gz" linkName="${installdir}/common/man/man3/new_fieldtype.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_fieldtype.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/color_set.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/color_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/syncok.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/syncok.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wecho_wchar.3x.gz" />
                <createSymLink target="curs_add_wch.3x.gz" linkName="${installdir}/common/man/man3/wecho_wchar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/is_linetouched.3x.gz" />
                <createSymLink target="curs_touch.3x.gz" linkName="${installdir}/common/man/man3/is_linetouched.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_touch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/get_wstr.3x.gz" />
                <createSymLink target="curs_get_wstr.3x.gz" linkName="${installdir}/common/man/man3/get_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/whline.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/whline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwin_wch.3x.gz" />
                <createSymLink target="curs_in_wch.3x.gz" linkName="${installdir}/common/man/man3/mvwin_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wbkgdset.3x.gz" />
                <createSymLink target="curs_bkgd.3x.gz" linkName="${installdir}/common/man/man3/wbkgdset.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winsnstr.3x.gz" />
                <createSymLink target="curs_insstr.3x.gz" linkName="${installdir}/common/man/man3/winsnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/waddnstr.3x.gz" />
                <createSymLink target="curs_addstr.3x.gz" linkName="${installdir}/common/man/man3/waddnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/erasewchar.3x.gz" />
                <createSymLink target="curs_termattrs.3x.gz" linkName="${installdir}/common/man/man3/erasewchar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termattrs.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/keyname.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/keyname.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/derwin.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/derwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwgetnstr.3x.gz" />
                <createSymLink target="curs_getstr.3x.gz" linkName="${installdir}/common/man/man3/mvwgetnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/def_prog_mode.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/def_prog_mode.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/current_item.3x.gz" />
                <createSymLink target="mitem_current.3x.gz" linkName="${installdir}/common/man/man3/current_item.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_current.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/whline_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/whline_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/pnoutrefresh.3x.gz" />
                <createSymLink target="curs_pad.3x.gz" linkName="${installdir}/common/man/man3/pnoutrefresh.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_pad.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/addnstr.3x.gz" />
                <createSymLink target="curs_addstr.3x.gz" linkName="${installdir}/common/man/man3/addnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvadd_wch.3x.gz" />
                <createSymLink target="curs_add_wch.3x.gz" linkName="${installdir}/common/man/man3/mvadd_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/addnwstr.3x.gz" />
                <createSymLink target="curs_addwstr.3x.gz" linkName="${installdir}/common/man/man3/addnwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/resetty.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/resetty.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/dynamic_field_info.3x.gz" />
                <createSymLink target="form_field_info.3x.gz" linkName="${installdir}/common/man/man3/dynamic_field_info.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_info.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scr_restore.3x.gz" />
                <createSymLink target="curs_scr_dump.3x.gz" linkName="${installdir}/common/man/man3/scr_restore.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scr_dump.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_top_row.3x.gz" />
                <createSymLink target="mitem_current.3x.gz" linkName="${installdir}/common/man/man3/set_top_row.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_current.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/curs_set.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/curs_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/nl.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/nl.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_form_fields.3x.gz" />
                <createSymLink target="form_field.3x.gz" linkName="${installdir}/common/man/man3/set_form_fields.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_term.3x.gz" />
                <createSymLink target="menu_hook.3x.gz" linkName="${installdir}/common/man/man3/item_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_buffer.3x.gz" />
                <createSymLink target="form_field_buffer.3x.gz" linkName="${installdir}/common/man/man3/field_buffer.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_buffer.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/unpost_menu.3x.gz" />
                <createSymLink target="menu_post.3x.gz" linkName="${installdir}/common/man/man3/unpost_menu.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_post.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/untouchwin.3x.gz" />
                <createSymLink target="curs_touch.3x.gz" linkName="${installdir}/common/man/man3/untouchwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_touch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wborder.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/wborder.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinsch.3x.gz" />
                <createSymLink target="curs_insch.3x.gz" linkName="${installdir}/common/man/man3/mvinsch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/post_menu.3x.gz" />
                <createSymLink target="menu_post.3x.gz" linkName="${installdir}/common/man/man3/post_menu.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_post.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vw_scanw.3x.gz" />
                <createSymLink target="curs_scanw.3x.gz" linkName="${installdir}/common/man/man3/vw_scanw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scanw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/keypad.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/keypad.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/meta.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/meta.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_attron.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_attron.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_traceattr.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_traceattr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_mark.3x.gz" />
                <createSymLink target="menu_mark.3x.gz" linkName="${installdir}/common/man/man3/set_menu_mark.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_mark.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinsstr.3x.gz" />
                <createSymLink target="curs_insstr.3x.gz" linkName="${installdir}/common/man/man3/mvinsstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/free_field.3x.gz" />
                <createSymLink target="form_field_new.3x.gz" linkName="${installdir}/common/man/man3/free_field.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/waddch.3x.gz" />
                <createSymLink target="curs_addch.3x.gz" linkName="${installdir}/common/man/man3/waddch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/echo_wchar.3x.gz" />
                <createSymLink target="curs_add_wch.3x.gz" linkName="${installdir}/common/man/man3/echo_wchar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wstandout.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wstandout.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/raw.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/raw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvaddwstr.3x.gz" />
                <createSymLink target="curs_addwstr.3x.gz" linkName="${installdir}/common/man/man3/mvaddwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tgetent.3x.gz" />
                <createSymLink target="curs_termcap.3x.gz" linkName="${installdir}/common/man/man3/tgetent.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termcap.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/delscreen.3x.gz" />
                <createSymLink target="curs_initscr.3x.gz" linkName="${installdir}/common/man/man3/delscreen.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_initscr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/endwin.3x.gz" />
                <createSymLink target="curs_initscr.3x.gz" linkName="${installdir}/common/man/man3/endwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_initscr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winsdelln.3x.gz" />
                <createSymLink target="curs_deleteln.3x.gz" linkName="${installdir}/common/man/man3/winsdelln.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_deleteln.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvadd_wchnstr.3x.gz" />
                <createSymLink target="curs_add_wchstr.3x.gz" linkName="${installdir}/common/man/man3/mvadd_wchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/insdelln.3x.gz" />
                <createSymLink target="curs_deleteln.3x.gz" linkName="${installdir}/common/man/man3/insdelln.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_deleteln.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/init_color.3x.gz" />
                <createSymLink target="curs_color.3x.gz" linkName="${installdir}/common/man/man3/init_color.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_color.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/link_field.3x.gz" />
                <createSymLink target="form_field_new.3x.gz" linkName="${installdir}/common/man/man3/link_field.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wadd_wchnstr.3x.gz" />
                <createSymLink target="curs_add_wchstr.3x.gz" linkName="${installdir}/common/man/man3/wadd_wchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwdelch.3x.gz" />
                <createSymLink target="curs_delch.3x.gz" linkName="${installdir}/common/man/man3/mvwdelch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_delch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wunctrl.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/wunctrl.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvaddch.3x.gz" />
                <createSymLink target="curs_addch.3x.gz" linkName="${installdir}/common/man/man3/mvaddch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/immedok.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/immedok.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinwstr.3x.gz" />
                <createSymLink target="curs_inwstr.3x.gz" linkName="${installdir}/common/man/man3/mvinwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/pair_content.3x.gz" />
                <createSymLink target="curs_color.3x.gz" linkName="${installdir}/common/man/man3/pair_content.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_color.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwgetstr.3x.gz" />
                <createSymLink target="curs_getstr.3x.gz" linkName="${installdir}/common/man/man3/mvwgetstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/notimeout.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/notimeout.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/in_wchnstr.3x.gz" />
                <createSymLink target="curs_in_wchstr.3x.gz" linkName="${installdir}/common/man/man3/in_wchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_in_wchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wgetstr.3x.gz" />
                <createSymLink target="curs_getstr.3x.gz" linkName="${installdir}/common/man/man3/wgetstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/has_key.3x.gz" />
                <createSymLink target="curs_getch.3x.gz" linkName="${installdir}/common/man/man3/has_key.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/addch.3x.gz" />
                <createSymLink target="curs_addch.3x.gz" linkName="${installdir}/common/man/man3/addch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvaddchnstr.3x.gz" />
                <createSymLink target="curs_addchstr.3x.gz" linkName="${installdir}/common/man/man3/mvaddchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/box.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/box.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getsyx.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/getsyx.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_noutrefresh.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_noutrefresh.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwget_wstr.3x.gz" />
                <createSymLink target="curs_get_wstr.3x.gz" linkName="${installdir}/common/man/man3/mvwget_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wattr_on.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wattr_on.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_form_sub.3x.gz" />
                <createSymLink target="form_win.3x.gz" linkName="${installdir}/common/man/man3/set_form_sub.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_win.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_form_userptr.3x.gz" />
                <createSymLink target="form_userptr.3x.gz" linkName="${installdir}/common/man/man3/set_form_userptr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_userptr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/doupdate.3x.gz" />
                <createSymLink target="curs_refresh.3x.gz" linkName="${installdir}/common/man/man3/doupdate.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_refresh.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_status.3x.gz" />
                <createSymLink target="form_field_buffer.3x.gz" linkName="${installdir}/common/man/man3/field_status.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_buffer.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wgetbkgrnd.3x.gz" />
                <createSymLink target="curs_bkgrnd.3x.gz" linkName="${installdir}/common/man/man3/wgetbkgrnd.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgrnd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wscanw.3x.gz" />
                <createSymLink target="curs_scanw.3x.gz" linkName="${installdir}/common/man/man3/wscanw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scanw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvinchnstr.3x.gz" />
                <createSymLink target="curs_inchstr.3x.gz" linkName="${installdir}/common/man/man3/mvinchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinch.3x.gz" />
                <createSymLink target="curs_inch.3x.gz" linkName="${installdir}/common/man/man3/mvwinch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/cbreak.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/cbreak.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/resize_term.3x.gz" />
                <createSymLink target="resizeterm.3x.gz" linkName="${installdir}/common/man/man3/resize_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/resizeterm.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_back.3x.gz" />
                <createSymLink target="form_field_attributes.3x.gz" linkName="${installdir}/common/man/man3/field_back.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_nc_tracebits.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_nc_tracebits.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/attrset.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/attrset.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/putwin.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/putwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/new_field.3x.gz" />
                <createSymLink target="form_field_new.3x.gz" linkName="${installdir}/common/man/man3/new_field.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/leaveok.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/leaveok.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/ins_nwstr.3x.gz" />
                <createSymLink target="curs_ins_wstr.3x.gz" linkName="${installdir}/common/man/man3/ins_nwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wsetscrreg.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/wsetscrreg.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvins_wch.3x.gz" />
                <createSymLink target="curs_ins_wch.3x.gz" linkName="${installdir}/common/man/man3/mvins_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wget_wstr.3x.gz" />
                <createSymLink target="curs_get_wstr.3x.gz" linkName="${installdir}/common/man/man3/wget_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_term.3x.gz" />
                <createSymLink target="form_hook.3x.gz" linkName="${installdir}/common/man/man3/set_field_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_count.3x.gz" />
                <createSymLink target="form_field.3x.gz" linkName="${installdir}/common/man/man3/field_count.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/delwin.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/delwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/border_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/border_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/addchnstr.3x.gz" />
                <createSymLink target="curs_addchstr.3x.gz" linkName="${installdir}/common/man/man3/addchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_opts.3x.gz" />
                <createSymLink target="mitem_opts.3x.gz" linkName="${installdir}/common/man/man3/item_opts.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vline_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/vline_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/form_fields.3x.gz" />
                <createSymLink target="form_field.3x.gz" linkName="${installdir}/common/man/man3/form_fields.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/bkgrnd.3x.gz" />
                <createSymLink target="curs_bkgrnd.3x.gz" linkName="${installdir}/common/man/man3/bkgrnd.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgrnd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvgetn_wstr.3x.gz" />
                <createSymLink target="curs_get_wstr.3x.gz" linkName="${installdir}/common/man/man3/mvgetn_wstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_fore.3x.gz" />
                <createSymLink target="form_field_attributes.3x.gz" linkName="${installdir}/common/man/man3/set_field_fore.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/delay_output.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/delay_output.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/ungetch.3x.gz" />
                <createSymLink target="curs_getch.3x.gz" linkName="${installdir}/common/man/man3/ungetch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wget_wch.3x.gz" />
                <createSymLink target="curs_get_wch.3x.gz" linkName="${installdir}/common/man/man3/wget_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvderwin.3x.gz" />
                <createSymLink target="curs_window.3x.gz" linkName="${installdir}/common/man/man3/mvderwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_window.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winsch.3x.gz" />
                <createSymLink target="curs_insch.3x.gz" linkName="${installdir}/common/man/man3/winsch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwins_wch.3x.gz" />
                <createSymLink target="curs_ins_wch.3x.gz" linkName="${installdir}/common/man/man3/mvwins_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/flushinp.3x.gz" />
                <createSymLink target="curs_util.3x.gz" linkName="${installdir}/common/man/man3/flushinp.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_util.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/inchstr.3x.gz" />
                <createSymLink target="curs_inchstr.3x.gz" linkName="${installdir}/common/man/man3/inchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/waddchnstr.3x.gz" />
                <createSymLink target="curs_addchstr.3x.gz" linkName="${installdir}/common/man/man3/waddchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/echo.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/echo.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_item_value.3x.gz" />
                <createSymLink target="mitem_value.3x.gz" linkName="${installdir}/common/man/man3/set_item_value.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_value.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wattron.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wattron.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/add_wch.3x.gz" />
                <createSymLink target="curs_add_wch.3x.gz" linkName="${installdir}/common/man/man3/add_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_add_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/setsyx.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/setsyx.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_back.3x.gz" />
                <createSymLink target="menu_attributes.3x.gz" linkName="${installdir}/common/man/man3/menu_back.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwhline_set.3x.gz" />
                <createSymLink target="curs_border_set.3x.gz" linkName="${installdir}/common/man/man3/mvwhline_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border_set.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wrefresh.3x.gz" />
                <createSymLink target="curs_refresh.3x.gz" linkName="${installdir}/common/man/man3/wrefresh.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_refresh.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/assume_default_colors.3x.gz" />
                <createSymLink target="default_colors.3x.gz" linkName="${installdir}/common/man/man3/assume_default_colors.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/default_colors.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinsch.3x.gz" />
                <createSymLink target="curs_insch.3x.gz" linkName="${installdir}/common/man/man3/mvwinsch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tputs.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/tputs.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/menu_pad.3x.gz" />
                <createSymLink target="menu_attributes.3x.gz" linkName="${installdir}/common/man/man3/menu_pad.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getmaxyx.3x.gz" />
                <createSymLink target="curs_getyx.3x.gz" linkName="${installdir}/common/man/man3/getmaxyx.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getyx.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_fieldtype_choice.3x.gz" />
                <createSymLink target="form_fieldtype.3x.gz" linkName="${installdir}/common/man/man3/set_fieldtype_choice.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_fieldtype.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_fore.3x.gz" />
                <createSymLink target="form_field_attributes.3x.gz" linkName="${installdir}/common/man/man3/field_fore.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/deleteln.3x.gz" />
                <createSymLink target="curs_deleteln.3x.gz" linkName="${installdir}/common/man/man3/deleteln.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_deleteln.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/attron.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/attron.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_fore.3x.gz" />
                <createSymLink target="menu_attributes.3x.gz" linkName="${installdir}/common/man/man3/set_menu_fore.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_attributes.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getmouse.3x.gz" />
                <createSymLink target="curs_mouse.3x.gz" linkName="${installdir}/common/man/man3/getmouse.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_mouse.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/idcok.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/idcok.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getbkgd.3x.gz" />
                <createSymLink target="curs_bkgd.3x.gz" linkName="${installdir}/common/man/man3/getbkgd.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/form_init.3x.gz" />
                <createSymLink target="form_hook.3x.gz" linkName="${installdir}/common/man/man3/form_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwaddchstr.3x.gz" />
                <createSymLink target="curs_addchstr.3x.gz" linkName="${installdir}/common/man/man3/mvwaddchstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scanw.3x.gz" />
                <createSymLink target="curs_scanw.3x.gz" linkName="${installdir}/common/man/man3/scanw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scanw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/subpad.3x.gz" />
                <createSymLink target="curs_pad.3x.gz" linkName="${installdir}/common/man/man3/subpad.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_pad.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/setterm.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/setterm.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_item_userptr.3x.gz" />
                <createSymLink target="mitem_userptr.3x.gz" linkName="${installdir}/common/man/man3/set_item_userptr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_userptr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvvline.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/mvvline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scr_set.3x.gz" />
                <createSymLink target="curs_scr_dump.3x.gz" linkName="${installdir}/common/man/man3/scr_set.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scr_dump.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/def_shell_mode.3x.gz" />
                <createSymLink target="curs_kernel.3x.gz" linkName="${installdir}/common/man/man3/def_shell_mode.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_kernel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinsstr.3x.gz" />
                <createSymLink target="curs_insstr.3x.gz" linkName="${installdir}/common/man/man3/mvwinsstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_insstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getbkgrnd.3x.gz" />
                <createSymLink target="curs_bkgrnd.3x.gz" linkName="${installdir}/common/man/man3/getbkgrnd.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgrnd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/update_panels.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/update_panels.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_arg.3x.gz" />
                <createSymLink target="form_field_validation.3x.gz" linkName="${installdir}/common/man/man3/field_arg.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_validation.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_field_buffer.3x.gz" />
                <createSymLink target="form_field_buffer.3x.gz" linkName="${installdir}/common/man/man3/set_field_buffer.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_buffer.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvgetnstr.3x.gz" />
                <createSymLink target="curs_getstr.3x.gz" linkName="${installdir}/common/man/man3/mvgetnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wattrset.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/wattrset.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwscanw.3x.gz" />
                <createSymLink target="curs_scanw.3x.gz" linkName="${installdir}/common/man/man3/mvwscanw.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scanw.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tigetflag.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/tigetflag.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tparm.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/tparm.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/inchnstr.3x.gz" />
                <createSymLink target="curs_inchstr.3x.gz" linkName="${installdir}/common/man/man3/inchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_max_field.3x.gz" />
                <createSymLink target="form_field_buffer.3x.gz" linkName="${installdir}/common/man/man3/set_max_field.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_buffer.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_item_init.3x.gz" />
                <createSymLink target="menu_hook.3x.gz" linkName="${installdir}/common/man/man3/set_item_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/form_opts_off.3x.gz" />
                <createSymLink target="form_opts.3x.gz" linkName="${installdir}/common/man/man3/form_opts_off.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwgetch.3x.gz" />
                <createSymLink target="curs_getch.3x.gz" linkName="${installdir}/common/man/man3/mvwgetch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/top_panel.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/top_panel.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/winsertln.3x.gz" />
                <createSymLink target="curs_deleteln.3x.gz" linkName="${installdir}/common/man/man3/winsertln.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_deleteln.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/tgetflag.3x.gz" />
                <createSymLink target="curs_termcap.3x.gz" linkName="${installdir}/common/man/man3/tgetflag.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_termcap.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/form_term.3x.gz" />
                <createSymLink target="form_hook.3x.gz" linkName="${installdir}/common/man/man3/form_term.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/timeout.3x.gz" />
                <createSymLink target="curs_inopts.3x.gz" linkName="${installdir}/common/man/man3/timeout.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wins_nwstr.3x.gz" />
                <createSymLink target="curs_ins_wstr.3x.gz" linkName="${installdir}/common/man/man3/wins_nwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/isendwin.3x.gz" />
                <createSymLink target="curs_initscr.3x.gz" linkName="${installdir}/common/man/man3/isendwin.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_initscr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/get_wch.3x.gz" />
                <createSymLink target="curs_get_wch.3x.gz" linkName="${installdir}/common/man/man3/get_wch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_get_wch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wmove.3x.gz" />
                <createSymLink target="curs_move.3x.gz" linkName="${installdir}/common/man/man3/wmove.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_move.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwaddch.3x.gz" />
                <createSymLink target="curs_addch.3x.gz" linkName="${installdir}/common/man/man3/mvwaddch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/instr.3x.gz" />
                <createSymLink target="curs_instr.3x.gz" linkName="${installdir}/common/man/man3/instr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_instr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/COLOR_PAIR.3x.gz" />
                <createSymLink target="curs_color.3x.gz" linkName="${installdir}/common/man/man3/COLOR_PAIR.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_color.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvcur.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/mvcur.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/is_wintouched.3x.gz" />
                <createSymLink target="curs_touch.3x.gz" linkName="${installdir}/common/man/man3/is_wintouched.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_touch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/wbkgrndset.3x.gz" />
                <createSymLink target="curs_bkgrnd.3x.gz" linkName="${installdir}/common/man/man3/wbkgrndset.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_bkgrnd.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/innstr.3x.gz" />
                <createSymLink target="curs_instr.3x.gz" linkName="${installdir}/common/man/man3/innstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_instr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/panel_below.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/panel_below.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/field_opts_off.3x.gz" />
                <createSymLink target="form_field_opts.3x.gz" linkName="${installdir}/common/man/man3/field_opts_off.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_field_opts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwvline.3x.gz" />
                <createSymLink target="curs_border.3x.gz" linkName="${installdir}/common/man/man3/mvwvline.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_border.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_attr_on.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_attr_on.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwinchnstr.3x.gz" />
                <createSymLink target="curs_inchstr.3x.gz" linkName="${installdir}/common/man/man3/mvwinchnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inchstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/item_init.3x.gz" />
                <createSymLink target="menu_hook.3x.gz" linkName="${installdir}/common/man/man3/item_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_hook.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/waddnwstr.3x.gz" />
                <createSymLink target="curs_addwstr.3x.gz" linkName="${installdir}/common/man/man3/waddnwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addwstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/free_item.3x.gz" />
                <createSymLink target="mitem_new.3x.gz" linkName="${installdir}/common/man/man3/free_item.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/mitem_new.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/inch.3x.gz" />
                <createSymLink target="curs_inch.3x.gz" linkName="${installdir}/common/man/man3/inch.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_inch.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/nonl.3x.gz" />
                <createSymLink target="curs_outopts.3x.gz" linkName="${installdir}/common/man/man3/nonl.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_outopts.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/set_menu_userptr.3x.gz" />
                <createSymLink target="menu_userptr.3x.gz" linkName="${installdir}/common/man/man3/set_menu_userptr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/menu_userptr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_attrset.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_attrset.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/getcchar.3x.gz" />
                <createSymLink target="curs_getcchar.3x.gz" linkName="${installdir}/common/man/man3/getcchar.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_getcchar.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/data_behind.3x.gz" />
                <createSymLink target="form_data.3x.gz" linkName="${installdir}/common/man/man3/data_behind.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/form_data.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/_tracechtype2.3x.gz" />
                <createSymLink target="curs_trace.3x.gz" linkName="${installdir}/common/man/man3/_tracechtype2.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_trace.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/slk_label.3x.gz" />
                <createSymLink target="curs_slk.3x.gz" linkName="${installdir}/common/man/man3/slk_label.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_slk.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/vid_attr.3x.gz" />
                <createSymLink target="curs_terminfo.3x.gz" linkName="${installdir}/common/man/man3/vid_attr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_terminfo.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/color_content.3x.gz" />
                <createSymLink target="curs_color.3x.gz" linkName="${installdir}/common/man/man3/color_content.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_color.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/chgat.3x.gz" />
                <createSymLink target="curs_attr.3x.gz" linkName="${installdir}/common/man/man3/chgat.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_attr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvaddnstr.3x.gz" />
                <createSymLink target="curs_addstr.3x.gz" linkName="${installdir}/common/man/man3/mvaddnstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_addstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/mvwins_nwstr.3x.gz" />
                <createSymLink target="curs_ins_wstr.3x.gz" linkName="${installdir}/common/man/man3/mvwins_nwstr.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_ins_wstr.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/scr_init.3x.gz" />
                <createSymLink target="curs_scr_dump.3x.gz" linkName="${installdir}/common/man/man3/scr_init.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/curs_scr_dump.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/man3/panel_hidden.3x.gz" />
                <createSymLink target="panel.3x.gz" linkName="${installdir}/common/man/man3/panel_hidden.3x.gz" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/man3/panel.3x.gz" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/de/man1/ps2pdf13.1" />
                <createSymLink target="ps2pdf.1" linkName="${installdir}/common/man/de/man1/ps2pdf13.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/de/man1/ps2pdf.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/de/man1/ps2pdf12.1" />
                <createSymLink target="ps2pdf.1" linkName="${installdir}/common/man/de/man1/ps2pdf12.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/de/man1/ps2pdf.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/man/de/man1/eps2eps.1" />
                <createSymLink target="ps2ps.1" linkName="${installdir}/common/man/de/man1/eps2eps.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/man/de/man1/ps2ps.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libhistory.so.5" />
                <createSymLink target="libhistory.so.5.2" linkName="${installdir}/common/lib/libhistory.so.5" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libhistory.so.5.2" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libfreetype.so.6" />
                <createSymLink target="libfreetype.so.6.3.15" linkName="${installdir}/common/lib/libfreetype.so.6" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libfreetype.so.6.3.15" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libjpeg.so" />
                <createSymLink target="libjpeg.so.62.0.0" linkName="${installdir}/common/lib/libjpeg.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libjpeg.so.62.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libhistory.so" />
                <createSymLink target="libhistory.so.5" linkName="${installdir}/common/lib/libhistory.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libhistory.so.5" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libreadline.so" />
                <createSymLink target="libreadline.so.5" linkName="${installdir}/common/lib/libreadline.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libreadline.so.5" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libiconv.so" />
                <createSymLink target="libiconv.so.2.4.0" linkName="${installdir}/common/lib/libiconv.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libiconv.so.2.4.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libgif.so.4" />
                <createSymLink target="libgif.so.4.1.6" linkName="${installdir}/common/lib/libgif.so.4" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libgif.so.4.1.6" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libcharset.so.1" />
                <createSymLink target="libcharset.so.1.0.0" linkName="${installdir}/common/lib/libcharset.so.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libcharset.so.1.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libpng.so.3" />
                <createSymLink target="libpng.so.3.24.0" linkName="${installdir}/common/lib/libpng.so.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libpng.so.3.24.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libwmf-0.2.so.7" />
                <createSymLink target="libwmf-0.2.so.7.1.0" linkName="${installdir}/common/lib/libwmf-0.2.so.7" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libwmf-0.2.so.7.1.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libz.so" />
                <createSymLink target="libz.so.1.2.3" linkName="${installdir}/common/lib/libz.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libz.so.1.2.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libcharset.so" />
                <createSymLink target="libcharset.so.1.0.0" linkName="${installdir}/common/lib/libcharset.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libcharset.so.1.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libgif.so" />
                <createSymLink target="libgif.so.4.1.6" linkName="${installdir}/common/lib/libgif.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libgif.so.4.1.6" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libwmf.so" />
                <createSymLink target="libwmf-0.2.so.7.1.0" linkName="${installdir}/common/lib/libwmf.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libwmf-0.2.so.7.1.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libpng.a" />
                <createSymLink target="libpng12.a" linkName="${installdir}/common/lib/libpng.a" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libpng12.a" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libz.so.1" />
                <createSymLink target="libz.so.1.2.3" linkName="${installdir}/common/lib/libz.so.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libz.so.1.2.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libpng12.so" />
                <createSymLink target="libpng12.so.0.24.0" linkName="${installdir}/common/lib/libpng12.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libpng12.so.0.24.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libreadline.so.5" />
                <createSymLink target="libreadline.so.5.2" linkName="${installdir}/common/lib/libreadline.so.5" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libreadline.so.5.2" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libjpeg.so.62" />
                <createSymLink target="libjpeg.so.62.0.0" linkName="${installdir}/common/lib/libjpeg.so.62" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libjpeg.so.62.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/pkgconfig/libpng.pc" />
                <createSymLink target="libpng12.pc" linkName="${installdir}/common/lib/pkgconfig/libpng.pc" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/pkgconfig/libpng12.pc" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libpng.la" />
                <createSymLink target="libpng12.la" linkName="${installdir}/common/lib/libpng.la" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libpng12.la" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libpng.so" />
                <createSymLink target="libpng12.so" linkName="${installdir}/common/lib/libpng.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libpng12.so" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libssl.so" />
                <createSymLink target="libssl.so.0.9.8" linkName="${installdir}/common/lib/libssl.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libssl.so.0.9.8" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libcrypto.so" />
                <createSymLink target="libcrypto.so.0.9.8" linkName="${installdir}/common/lib/libcrypto.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libcrypto.so.0.9.8" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libfreetype.so" />
                <createSymLink target="libfreetype.so.6.3.15" linkName="${installdir}/common/lib/libfreetype.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libfreetype.so.6.3.15" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/terminfo" />
                <createSymLink target="../share/terminfo" linkName="${installdir}/common/lib/terminfo" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/../share/terminfo" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libwmflite.so" />
                <createSymLink target="libwmflite-0.2.so.7.0.1" linkName="${installdir}/common/lib/libwmflite.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libwmflite-0.2.so.7.0.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libwmflite-0.2.so.7" />
                <createSymLink target="libwmflite-0.2.so.7.0.1" linkName="${installdir}/common/lib/libwmflite-0.2.so.7" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libwmflite-0.2.so.7.0.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libiconv.so.2" />
                <createSymLink target="libiconv.so.2.4.0" linkName="${installdir}/common/lib/libiconv.so.2" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libiconv.so.2.4.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libpng12.so.0" />
                <createSymLink target="libpng12.so.0.24.0" linkName="${installdir}/common/lib/libpng12.so.0" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libpng12.so.0.24.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libstdc++.so.5" />
                <createSymLink target="libstdc++.so.5.0.3" linkName="${installdir}/common/lib/libstdc++.so.5" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libstdc++.so.5.0.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/bin/infotocap" />
                <createSymLink target="tic" linkName="${installdir}/common/bin/infotocap" >
                     <ruleList>
                         <fileTest path="${installdir}/common/bin/tic" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/bin/reset" />
                <createSymLink target="tset" linkName="${installdir}/common/bin/reset" >
                     <ruleList>
                         <fileTest path="${installdir}/common/bin/tset" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/bin/libpng-config" />
                <createSymLink target="libpng12-config" linkName="${installdir}/common/bin/libpng-config" >
                     <ruleList>
                         <fileTest path="${installdir}/common/bin/libpng12-config" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/bin/captoinfo" />
                <createSymLink target="tic" linkName="${installdir}/common/bin/captoinfo" >
                     <ruleList>
                         <fileTest path="${installdir}/common/bin/tic" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/include/pngconf.h" />
                <createSymLink target="libpng12/pngconf.h" linkName="${installdir}/common/include/pngconf.h" >
                     <ruleList>
                         <fileTest path="${installdir}/common/include/libpng12/pngconf.h" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/include/ncurses/ncurses.h" />
                <createSymLink target="curses.h" linkName="${installdir}/common/include/ncurses/ncurses.h" >
                     <ruleList>
                         <fileTest path="${installdir}/common/include/ncurses/curses.h" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/include/png.h" />
                <createSymLink target="libpng12/png.h" linkName="${installdir}/common/include/png.h" >
                     <ruleList>
                         <fileTest path="${installdir}/common/include/libpng12/png.h" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man1/mdc2.1" />
                <createSymLink target="dgst.1" linkName="${installdir}/common/openssl/man/man1/mdc2.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man1/dgst.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man1/sha.1" />
                <createSymLink target="dgst.1" linkName="${installdir}/common/openssl/man/man1/sha.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man1/dgst.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man1/md5.1" />
                <createSymLink target="dgst.1" linkName="${installdir}/common/openssl/man/man1/md5.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man1/dgst.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man1/md4.1" />
                <createSymLink target="dgst.1" linkName="${installdir}/common/openssl/man/man1/md4.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man1/dgst.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man1/sha1.1" />
                <createSymLink target="dgst.1" linkName="${installdir}/common/openssl/man/man1/sha1.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man1/dgst.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man1/ripemd160.1" />
                <createSymLink target="dgst.1" linkName="${installdir}/common/openssl/man/man1/ripemd160.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man1/dgst.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man1/md2.1" />
                <createSymLink target="dgst.1" linkName="${installdir}/common/openssl/man/man1/md2.1" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man1/dgst.1" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_ctrl_get_write_guarantee.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_ctrl_get_write_guarantee.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_DSAPrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_DSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_add_input_boolean.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_add_input_boolean.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_check_none.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_check_none.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_iv_length.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_iv_length.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_DSA_PUBKEY.3" />
                <createSymLink target="d2i_DSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_DSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_DSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD5_Final.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD5_Final.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_retry_BIO.3" />
                <createSymLink target="BIO_should_retry.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_retry_BIO.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_should_retry.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_type.3" />
                <createSymLink target="ASN1_STRING_length.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_type.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_length.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_get_text_by_NID.3" />
                <createSymLink target="X509_NAME_get_index_by_NID.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_get_text_by_NID.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_get_index_by_NID.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate_ASN1.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate_ASN1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_DigestInit_ex.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_DigestInit_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_exp.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_exp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_bin2bn.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_bin2bn.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_copy_ex.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_copy_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_peek_last_error_line.3" />
                <createSymLink target="ERR_get_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_peek_last_error_line.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_get_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_ctrl.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_ctrl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_is_prime_fasttest.3" />
                <createSymLink target="BN_generate_prime.3" linkName="${installdir}/common/openssl/man/man3/BN_is_prime_fasttest.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_generate_prime.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_DSA_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_DSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_EncryptFinal_ex.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_EncryptFinal_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_need_tmp_rsa.3" />
                <createSymLink target="SSL_CTX_set_tmp_rsa_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_need_tmp_rsa.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_rsa_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_blinding_off.3" />
                <createSymLink target="RSA_blinding_on.3" linkName="${installdir}/common/openssl/man/man3/RSA_blinding_off.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_blinding_on.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_X509_CRL.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_X509_CRL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_invert.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_invert.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_REQ.3" />
                <createSymLink target="d2i_X509_REQ.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_REQ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_REQ.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_fd.3" />
                <createSymLink target="BIO_s_fd.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_fd.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_fd.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_RSAPrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_RSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BUF_strdup.3" />
                <createSymLink target="buffer.3" linkName="${installdir}/common/openssl/man/man3/BUF_strdup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/buffer.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_sqr_normal.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_sqr_normal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_EncryptFinal.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_EncryptFinal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_RSAPrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_RSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_flush_sessions.3" />
                <createSymLink target="SSL_CTX_flush_sessions.3" linkName="${installdir}/common/openssl/man/man3/SSL_flush_sessions.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_flush_sessions.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD4_Init.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD4_Init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_get1_EC_KEY.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_get1_EC_KEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_get_method.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_get_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_key_length.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_key_length.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_gets.3" />
                <createSymLink target="BIO_read.3" linkName="${installdir}/common/openssl/man/man3/BIO_gets.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_read.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_eof.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_eof.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_conn_hostname.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_conn_hostname.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_MONT_CTX_new.3" />
                <createSymLink target="BN_mod_mul_montgomery.3" linkName="${installdir}/common/openssl/man/man3/BN_MONT_CTX_new.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_montgomery.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_bn2hex.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_bn2hex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_sha1.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_sha1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_create_by_OBJ.3" />
                <createSymLink target="X509_NAME_ENTRY_get_object.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_create_by_OBJ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_get_object.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_add_words.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_add_words.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_get_cache_size.3" />
                <createSymLink target="SSL_CTX_sess_set_cache_size.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_get_cache_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_cache_size.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_add_client_CA.3" />
                <createSymLink target="SSL_CTX_set_client_CA_list.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_add_client_CA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_client_CA_list.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_X509_REQ.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_X509_REQ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_nbio.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_nbio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_txt2nid.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_txt2nid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_rshift.3" />
                <createSymLink target="BN_set_bit.3" linkName="${installdir}/common/openssl/man/man3/BN_rshift.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_set_bit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_DSA_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_DSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_get_text_by_OBJ.3" />
                <createSymLink target="X509_NAME_get_index_by_NID.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_get_text_by_OBJ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_get_index_by_NID.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MDC2_Init.3" />
                <createSymLink target="mdc2.3" linkName="${installdir}/common/openssl/man/man3/MDC2_Init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/mdc2.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_check_PKCS1_type_1.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_check_PKCS1_type_1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_VerifyFinal.3" />
                <createSymLink target="EVP_VerifyInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_VerifyFinal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_VerifyInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_get_cipherbyname.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_get_cipherbyname.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_PrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_PrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_print_fp.3" />
                <createSymLink target="RSA_print.3" linkName="${installdir}/common/openssl/man/man3/RSA_print_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_print.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_make_bio_pair.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_make_bio_pair.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_OpenFinal.3" />
                <createSymLink target="EVP_OpenInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_OpenFinal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_OpenInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_RSAPrivateKey_ASN1.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_RSAPrivateKey_ASN1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_cipher_version.3" />
                <createSymLink target="SSL_get_current_cipher.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_cipher_version.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_get_current_cipher.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_ssl_copy_session_id.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_ssl_copy_session_id.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_certificate.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_certificate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_NETSCAPE_CERT_SEQUENCE.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_NETSCAPE_CERT_SEQUENCE.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_remove_session.3" />
                <createSymLink target="SSL_CTX_add_session.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_remove_session.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_add_session.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_xcbc_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_xcbc_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_mem_eof_return.3" />
                <createSymLink target="BIO_s_mem.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_mem_eof_return.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_mem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DHparams_print_fp.3" />
                <createSymLink target="RSA_print.3" linkName="${installdir}/common/openssl/man/man3/DHparams_print_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_print.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_NETSCAPE_CERT_SEQUENCE.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_NETSCAPE_CERT_SEQUENCE.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_func_error_string.3" />
                <createSymLink target="ERR_error_string.3" linkName="${installdir}/common/openssl/man/man3/ERR_func_error_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_error_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_next.3" />
                <createSymLink target="BIO_find_type.3" linkName="${installdir}/common/openssl/man/man3/BIO_next.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_find_type.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_buffer_ssl_connect.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_buffer_ssl_connect.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_comba4.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_comba4.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_get_cipherbyobj.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_get_cipherbyobj.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_delete.3" />
                <createSymLink target="lhash.3" linkName="${installdir}/common/openssl/man/man3/lh_delete.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lhash.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_PKCS8PrivateKey_bio.3" />
                <createSymLink target="d2i_PKCS8PrivateKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_PKCS8PrivateKey_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_X509.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_X509.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_verify.3" />
                <createSymLink target="RSA_sign.3" linkName="${installdir}/common/openssl/man/man3/RSA_verify.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_sign.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSLeay.3" />
                <createSymLink target="OPENSSL_VERSION_NUMBER.3" linkName="${installdir}/common/openssl/man/man3/SSLeay.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OPENSSL_VERSION_NUMBER.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RC4_set_key.3" />
                <createSymLink target="rc4.3" linkName="${installdir}/common/openssl/man/man3/RC4_set_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/rc4.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_sqr.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_sqr.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_tmp_rsa_callback.3" />
                <createSymLink target="SSL_CTX_set_tmp_rsa_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_tmp_rsa_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_rsa_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RIPEMD160_Final.3" />
                <createSymLink target="ripemd.3" linkName="${installdir}/common/openssl/man/man3/RIPEMD160_Final.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ripemd.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_set_ex_data.3" />
                <createSymLink target="DH_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/DH_set_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_get_ex_data.3" />
                <createSymLink target="DSA_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/DSA_get_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_node_usage_stats.3" />
                <createSymLink target="lh_stats.3" linkName="${installdir}/common/openssl/man/man3/lh_node_usage_stats.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lh_stats.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_callback_arg.3" />
                <createSymLink target="BIO_set_callback.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_callback_arg.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_set_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_verify.3" />
                <createSymLink target="SSL_CTX_set_verify.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_verify.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_verify.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_PKCS8PrivateKey_fp.3" />
                <createSymLink target="d2i_PKCS8PrivateKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_PKCS8PrivateKey_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_SESSION_set_timeout.3" />
                <createSymLink target="SSL_SESSION_get_time.3" linkName="${installdir}/common/openssl/man/man3/SSL_SESSION_set_timeout.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_SESSION_get_time.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_retry_reason.3" />
                <createSymLink target="BIO_should_retry.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_retry_reason.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_should_retry.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_X509_bio.3" />
                <createSymLink target="d2i_X509.3" linkName="${installdir}/common/openssl/man/man3/d2i_X509_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_ripemd160.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_ripemd160.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_crypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_crypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_mode.3" />
                <createSymLink target="SSL_CTX_set_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_add_words.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_add_words.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_conn_port.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_conn_port.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_options.3" />
                <createSymLink target="SSL_CTX_set_options.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_options.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_options.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_X509_REQ_bio.3" />
                <createSymLink target="d2i_X509_REQ.3" linkName="${installdir}/common/openssl/man/man3/d2i_X509_REQ_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_REQ.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_NETSCAPE_CERT_SEQUENCE.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_NETSCAPE_CERT_SEQUENCE.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSAparams_print.3" />
                <createSymLink target="RSA_print.3" linkName="${installdir}/common/openssl/man/man3/DSAparams_print.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_print.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSLeay_add_ssl_algorithms.3" />
                <createSymLink target="SSL_library_init.3" linkName="${installdir}/common/openssl/man/man3/SSLeay_add_ssl_algorithms.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_library_init.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_set_key.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_set_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_PKCS8PrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_PKCS8PrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_is_weak_key.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_is_weak_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_DecryptFinal_ex.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_DecryptFinal_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_set_word.3" />
                <createSymLink target="BN_zero.3" linkName="${installdir}/common/openssl/man/man3/BN_set_word.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_zero.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_OpenUpdate.3" />
                <createSymLink target="EVP_OpenInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_OpenUpdate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_OpenInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_GET_REASON.3" />
                <createSymLink target="ERR_GET_LIB.3" linkName="${installdir}/common/openssl/man/man3/ERR_GET_REASON.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_GET_LIB.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_free.3" />
                <createSymLink target="BIO_new.3" linkName="${installdir}/common/openssl/man/man3/BIO_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_callback_ctrl.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_callback_ctrl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_SSL_SESSION.3" />
                <createSymLink target="d2i_SSL_SESSION.3" linkName="${installdir}/common/openssl/man/man3/i2d_SSL_SESSION.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_SSL_SESSION.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mul_word.3" />
                <createSymLink target="BN_add_word.3" linkName="${installdir}/common/openssl/man/man3/BN_mul_word.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add_word.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_peek_error_line_data.3" />
                <createSymLink target="ERR_get_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_peek_error_line_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_get_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_certificate_file.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_certificate_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_error_string_n.3" />
                <createSymLink target="ERR_error_string.3" linkName="${installdir}/common/openssl/man/man3/ERR_error_string_n.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_error_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_set_locking_callback.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_set_locking_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_RSA_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_RSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_print.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_print.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_invert_ex.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_invert_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_dh.3" />
                <createSymLink target="SSL_CTX_set_tmp_dh_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_dh.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_dh_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_txt2obj.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_txt2obj.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_cipher_ctx.3" />
                <createSymLink target="BIO_f_cipher.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_cipher_ctx.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_cipher.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_type.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_type.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_get_app_data.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_get_app_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_RSA_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_RSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_get_method.3" />
                <createSymLink target="RSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/RSA_get_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_enc_write.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_enc_write.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_cbc_cksum.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_cbc_cksum.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_retry_type.3" />
                <createSymLink target="BIO_should_retry.3" linkName="${installdir}/common/openssl/man/man3/BIO_retry_type.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_should_retry.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_free.3" />
                <createSymLink target="DH_new.3" linkName="${installdir}/common/openssl/man/man3/DH_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_X509_AUX.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_X509_AUX.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_SignUpdate.3" />
                <createSymLink target="EVP_SignInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_SignUpdate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_SignInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_cipher_list.3" />
                <createSymLink target="SSL_get_ciphers.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_cipher_list.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_get_ciphers.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_type_new.3" />
                <createSymLink target="ASN1_STRING_new.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_type_new.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_public_decrypt.3" />
                <createSymLink target="RSA_private_encrypt.3" linkName="${installdir}/common/openssl/man/man3/RSA_public_decrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_private_encrypt.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BF_cfb64_encrypt.3" />
                <createSymLink target="blowfish.3" linkName="${installdir}/common/openssl/man/man3/BF_cfb64_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/blowfish.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/des_read_password.3" />
                <createSymLink target="ui_compat.3" linkName="${installdir}/common/openssl/man/man3/des_read_password.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui_compat.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_set_key_unchecked.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_set_key_unchecked.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_nbio_accept.3" />
                <createSymLink target="BIO_s_accept.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_nbio_accept.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_accept.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_set_default_method.3" />
                <createSymLink target="RSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/RSA_set_default_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_remove_cb.3" />
                <createSymLink target="SSL_CTX_sess_set_get_cb.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_remove_cb.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_get_cb.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_DecryptFinal.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_DecryptFinal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_write_filename.3" />
                <createSymLink target="BIO_s_file.3" linkName="${installdir}/common/openssl/man/man3/BIO_write_filename.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_pcbc_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_pcbc_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_size.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_clear_free.3" />
                <createSymLink target="BN_new.3" linkName="${installdir}/common/openssl/man/man3/BN_clear_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mod_word.3" />
                <createSymLink target="BN_add_word.3" linkName="${installdir}/common/openssl/man/man3/BN_mod_word.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add_word.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_DSAparams.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_DSAparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_RSAPrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_RSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_get1_RSA.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_get1_RSA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_add_client_CA.3" />
                <createSymLink target="SSL_CTX_set_client_CA_list.3" linkName="${installdir}/common/openssl/man/man3/SSL_add_client_CA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_client_CA_list.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_depth.3" />
                <createSymLink target="SSL_CTX_get_verify_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_depth.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_print_errors_fp.3" />
                <createSymLink target="ERR_print_errors.3" linkName="${installdir}/common/openssl/man/man3/ERR_print_errors_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_print_errors.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_num_bits.3" />
                <createSymLink target="BN_num_bytes.3" linkName="${installdir}/common/openssl/man/man3/BN_num_bits.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_num_bytes.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_PKCS8PrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_PKCS8PrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_create.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_create.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_md_ctx.3" />
                <createSymLink target="BIO_f_md.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_md_ctx.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_md.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_close.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_close.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_obj2nid.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_obj2nid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ede3_ofb64_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ede3_ofb64_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_X509_AUX.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_X509_AUX.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_RECP_CTX_set.3" />
                <createSymLink target="BN_mod_mul_reciprocal.3" linkName="${installdir}/common/openssl/man/man3/BN_RECP_CTX_set.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_reciprocal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_hex2bn.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_hex2bn.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_comba8.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_comba8.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL.3" />
                <createSymLink target="ssl.3" linkName="${installdir}/common/openssl/man/man3/SSL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set.3" />
                <createSymLink target="BIO_new.3" linkName="${installdir}/common/openssl/man/man3/BIO_set.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_ssl_mode.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_ssl_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_dec2bn.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_dec2bn.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_process.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_process.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_X509_REQ_NEW.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_X509_REQ_NEW.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_node_stats_bio.3" />
                <createSymLink target="lh_stats.3" linkName="${installdir}/common/openssl/man/man3/lh_node_stats_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lh_stats.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_cb_hits.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_cb_hits.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_mode.3" />
                <createSymLink target="SSL_CTX_set_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_DSA_SIG.3" />
                <createSymLink target="d2i_DSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_DSA_SIG.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_DSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_file_name.3" />
                <createSymLink target="RAND_load_file.3" linkName="${installdir}/common/openssl/man/man3/RAND_file_name.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_load_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_accept_state.3" />
                <createSymLink target="SSL_set_connect_state.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_accept_state.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_set_connect_state.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_free.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_rw_filename.3" />
                <createSymLink target="BIO_s_file.3" linkName="${installdir}/common/openssl/man/man3/BIO_rw_filename.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_cipher_bits.3" />
                <createSymLink target="SSL_get_current_cipher.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_cipher_bits.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_get_current_cipher.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_SESSION_get_timeout.3" />
                <createSymLink target="SSL_SESSION_get_time.3" linkName="${installdir}/common/openssl/man/man3/SSL_SESSION_get_timeout.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_SESSION_get_time.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_RSAPrivateKey.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_RSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_connect_renegotiate.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_connect_renegotiate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mod_sqr.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_mod_sqr.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_set.3" />
                <createSymLink target="ASN1_STRING_length.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_set.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_length.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_get_get_cb.3" />
                <createSymLink target="SSL_CTX_sess_set_get_cb.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_get_get_cb.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_get_cb.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_cipher.3" />
                <createSymLink target="SSL_get_current_cipher.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_cipher.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_get_current_cipher.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mul.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_mul.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_client_CA_list.3" />
                <createSymLink target="SSL_CTX_set_client_CA_list.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_client_CA_list.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_client_CA_list.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_RECP_CTX_init.3" />
                <createSymLink target="BN_mod_mul_reciprocal.3" linkName="${installdir}/common/openssl/man/man3/BN_RECP_CTX_init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_reciprocal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_PrivateKey.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_PrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_print_fp.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_print_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_ssl_method.3" />
                <createSymLink target="SSL_CTX_set_ssl_version.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_ssl_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_ssl_version.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_vfree.3" />
                <createSymLink target="BIO_new.3" linkName="${installdir}/common/openssl/man/man3/BIO_vfree.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_flags.3" />
                <createSymLink target="RSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/RSA_flags.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_mode.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_normal.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_normal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_ALGOR.3" />
                <createSymLink target="d2i_X509_ALGOR.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_ALGOR.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_ALGOR.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_nnmod.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_nnmod.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_num_renegotiates.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_num_renegotiates.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mask_bits.3" />
                <createSymLink target="BN_set_bit.3" linkName="${installdir}/common/openssl/man/man3/BN_mask_bits.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_set_bit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_add_SSLv23.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_add_SSLv23.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_msg_callback_arg.3" />
                <createSymLink target="SSL_CTX_set_msg_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_msg_callback_arg.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_msg_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_fp.3" />
                <createSymLink target="d2i_X509.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_Netscape_RSA.3" />
                <createSymLink target="d2i_RSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_Netscape_RSA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_RSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_ASN1_OBJECT.3" />
                <createSymLink target="d2i_ASN1_OBJECT.3" linkName="${installdir}/common/openssl/man/man3/i2d_ASN1_OBJECT.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_ASN1_OBJECT.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_rstate_string_long.3" />
                <createSymLink target="SSL_rstate_string.3" linkName="${installdir}/common/openssl/man/man3/SSL_rstate_string_long.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_rstate_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MAX_MD_SIZE.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MAX_MD_SIZE.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_value_one.3" />
                <createSymLink target="BN_zero.3" linkName="${installdir}/common/openssl/man/man3/BN_value_one.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_zero.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_lshift.3" />
                <createSymLink target="BN_set_bit.3" linkName="${installdir}/common/openssl/man/man3/BN_lshift.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_set_bit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_PKCS7.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_PKCS7.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_get_default_method.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_get_default_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_tmp_dh_callback.3" />
                <createSymLink target="SSL_CTX_set_tmp_dh_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_tmp_dh_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_dh_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ede3_cfb64_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ede3_cfb64_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_wpending.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_wpending.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_ctrl.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_ctrl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_dup_error_string.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_dup_error_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_write_file.3" />
                <createSymLink target="RAND_load_file.3" linkName="${installdir}/common/openssl/man/man3/RAND_write_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_load_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_bn2mpi.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_bn2mpi.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_clear_options.3" />
                <createSymLink target="SSL_CTX_set_options.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_clear_options.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_options.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CipherFinal_ex.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CipherFinal_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_clear_bit.3" />
                <createSymLink target="BN_set_bit.3" linkName="${installdir}/common/openssl/man/man3/BN_clear_bit.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_set_bit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ecb2_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ecb2_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_CTX_get.3" />
                <createSymLink target="BN_CTX_start.3" linkName="${installdir}/common/openssl/man/man3/BN_CTX_get.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_CTX_start.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_get_digestbynid.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_get_digestbynid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_conn_int_port.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_conn_int_port.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_ssl_method.3" />
                <createSymLink target="SSL_CTX_set_ssl_version.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_ssl_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_ssl_version.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_assign_DSA.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_assign_DSA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_set_key_length.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_set_key_length.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_DHparams.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_DHparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_to_montgomery.3" />
                <createSymLink target="BN_mod_mul_montgomery.3" linkName="${installdir}/common/openssl/man/man3/BN_to_montgomery.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_montgomery.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_X509_REQ.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_X509_REQ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_DSA_PUBKEY.3" />
                <createSymLink target="d2i_DSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/d2i_DSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_DSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CONF_modules_unload.3" />
                <createSymLink target="CONF_modules_free.3" linkName="${installdir}/common/openssl/man/man3/CONF_modules_unload.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/CONF_modules_free.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_X509_REQ.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_X509_REQ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_md5.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_md5.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DHparams_print.3" />
                <createSymLink target="RSA_print.3" linkName="${installdir}/common/openssl/man/man3/DHparams_print.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_print.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_dup_input_string.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_dup_input_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_get_word.3" />
                <createSymLink target="BN_zero.3" linkName="${installdir}/common/openssl/man/man3/BN_get_word.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_zero.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_get1_DSA.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_get1_DSA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_timeout.3" />
                <createSymLink target="SSL_CTX_set_timeout.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_timeout.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_timeout.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_convert.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_convert.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_secure_renegotiation_support.3" />
                <createSymLink target="SSL_CTX_set_options.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_secure_renegotiation_support.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_options.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_OBJECT_free.3" />
                <createSymLink target="ASN1_OBJECT_new.3" linkName="${installdir}/common/openssl/man/man3/ASN1_OBJECT_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_OBJECT_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD4.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD4.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_RSA_PUBKEY.3" />
                <createSymLink target="d2i_RSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/d2i_RSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_RSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_free.3" />
                <createSymLink target="EVP_PKEY_new.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_pkey_type.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_pkey_type.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_RSAPublicKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_RSAPublicKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_want_read.3" />
                <createSymLink target="SSL_want.3" linkName="${installdir}/common/openssl/man/man3/SSL_want_read.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_want.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_mem_data.3" />
                <createSymLink target="BIO_s_mem.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_mem_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_mem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OpenSSL_add_ssl_algorithms.3" />
                <createSymLink target="SSL_library_init.3" linkName="${installdir}/common/openssl/man/man3/OpenSSL_add_ssl_algorithms.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_library_init.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_is_zero.3" />
                <createSymLink target="BN_cmp.3" linkName="${installdir}/common/openssl/man/man3/BN_is_zero.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_cmp.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_DH.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_DH.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_EncryptInit_ex.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_EncryptInit_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_high.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_high.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_set_dynlock_lock_callback.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_set_dynlock_lock_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_CTX_init.3" />
                <createSymLink target="BN_CTX_new.3" linkName="${installdir}/common/openssl/man/man3/BN_CTX_init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_CTX_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_div_recp.3" />
                <createSymLink target="BN_mod_mul_reciprocal.3" linkName="${installdir}/common/openssl/man/man3/BN_div_recp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_reciprocal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_compute_key.3" />
                <createSymLink target="DH_generate_key.3" linkName="${installdir}/common/openssl/man/man3/DH_compute_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_generate_key.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BUF_MEM_free.3" />
                <createSymLink target="buffer.3" linkName="${installdir}/common/openssl/man/man3/BUF_MEM_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/buffer.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_DSAparams.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_DSAparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_md.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_md.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_DecryptUpdate.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_DecryptUpdate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_copy.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_copy.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate_file.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_info_callback.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_info_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ede2_ofb64_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ede2_ofb64_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mod_sub.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_mod_sub.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_type.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_type.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MDC2_Final.3" />
                <createSymLink target="mdc2.3" linkName="${installdir}/common/openssl/man/man3/MDC2_Final.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/mdc2.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_screen.3" />
                <createSymLink target="RAND_add.3" linkName="${installdir}/common/openssl/man/man3/RAND_screen.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_do_connect.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_do_connect.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_div.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_div.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_dup_verify_string.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_dup_verify_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_set_id_callback.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_set_id_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_from_montgomery.3" />
                <createSymLink target="BN_mod_mul_montgomery.3" linkName="${installdir}/common/openssl/man/man3/BN_from_montgomery.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_montgomery.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_get_error_line_data.3" />
                <createSymLink target="ERR_get_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_get_error_line_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_get_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_get1_DH.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_get1_DH.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_get_default_method.3" />
                <createSymLink target="DH_set_method.3" linkName="${installdir}/common/openssl/man/man3/DH_get_default_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_low_normal.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_low_normal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_want_write.3" />
                <createSymLink target="SSL_want.3" linkName="${installdir}/common/openssl/man/man3/SSL_want_write.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_want.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_bind_mode.3" />
                <createSymLink target="BIO_s_accept.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_bind_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_accept.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_callback.3" />
                <createSymLink target="BIO_set_callback.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_set_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_verify_mode.3" />
                <createSymLink target="SSL_CTX_get_verify_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_verify_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_DHparams.3" />
                <createSymLink target="d2i_DHparams.3" linkName="${installdir}/common/openssl/man/man3/i2d_DHparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_DHparams.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ofb64_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ofb64_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_get_next_error_library.3" />
                <createSymLink target="ERR_load_strings.3" linkName="${installdir}/common/openssl/man/man3/ERR_get_next_error_library.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_load_strings.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_expand.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_expand.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_dump.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_dump.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_ctrl_get_read_request.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_ctrl_get_read_request.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_wexpand.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_wexpand.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_want_nothing.3" />
                <createSymLink target="SSL_want.3" linkName="${installdir}/common/openssl/man/man3/SSL_want_nothing.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_want.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OpenSSL_add_all_ciphers.3" />
                <createSymLink target="OpenSSL_add_all_algorithms.3" linkName="${installdir}/common/openssl/man/man3/OpenSSL_add_all_ciphers.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OpenSSL_add_all_algorithms.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_need_tmp_rsa.3" />
                <createSymLink target="SSL_CTX_set_tmp_rsa_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_need_tmp_rsa.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_rsa_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_PrivateKey_file.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_PrivateKey_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_set_key_checked.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_set_key_checked.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_client_CA_list.3" />
                <createSymLink target="SSL_get_client_CA_list.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_client_CA_list.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_get_client_CA_list.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_event.3" />
                <createSymLink target="RAND_add.3" linkName="${installdir}/common/openssl/man/man3/RAND_event.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BUF_MEM_new.3" />
                <createSymLink target="buffer.3" linkName="${installdir}/common/openssl/man/man3/BUF_MEM_new.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/buffer.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_RSAPrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_RSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_peek_last_error_line_data.3" />
                <createSymLink target="ERR_get_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_peek_last_error_line_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_get_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_append_filename.3" />
                <createSymLink target="BIO_s_file.3" linkName="${installdir}/common/openssl/man/man3/BIO_append_filename.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BF_options.3" />
                <createSymLink target="blowfish.3" linkName="${installdir}/common/openssl/man/man3/BF_options.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/blowfish.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_recursive.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_recursive.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_state_string_long.3" />
                <createSymLink target="SSL_state_string.3" linkName="${installdir}/common/openssl/man/man3/SSL_state_string_long.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_state_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_cfb64_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_cfb64_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_should_read.3" />
                <createSymLink target="BIO_should_retry.3" linkName="${installdir}/common/openssl/man/man3/BIO_should_read.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_should_retry.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD2.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD2.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_words.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_words.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_connect.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_connect.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_data.3" />
                <createSymLink target="ASN1_STRING_length.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_length.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_RSAPrivateKey.3" />
                <createSymLink target="d2i_RSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/d2i_RSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_RSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_assign_RSA.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_assign_RSA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CONF_modules_finish.3" />
                <createSymLink target="CONF_modules_free.3" linkName="${installdir}/common/openssl/man/man3/CONF_modules_finish.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/CONF_modules_free.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_check_top.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_check_top.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_options.3" />
                <createSymLink target="SSL_CTX_set_options.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_options.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_options.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_add_entry_by_NID.3" />
                <createSymLink target="X509_NAME_add_entry_by_txt.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_add_entry_by_NID.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_add_entry_by_txt.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_DigestFinal_ex.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_DigestFinal_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_ptr_ctrl.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_ptr_ctrl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_CRL_bio.3" />
                <createSymLink target="d2i_X509_CRL.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_CRL_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_CRL.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey_bio.3" />
                <createSymLink target="d2i_PKCS8PrivateKey.3" linkName="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_check_private_key.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_check_private_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_new_method.3" />
                <createSymLink target="RSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/RSA_new_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_set_thread_id.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_set_thread_id.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_init.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_free.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_read_filename.3" />
                <createSymLink target="BIO_s_file.3" linkName="${installdir}/common/openssl/man/man3/BIO_read_filename.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RIPEMD160.3" />
                <createSymLink target="ripemd.3" linkName="${installdir}/common/openssl/man/man3/RIPEMD160.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ripemd.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_PrivateKey_ASN1.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_PrivateKey_ASN1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_set_default_method.3" />
                <createSymLink target="DH_set_method.3" linkName="${installdir}/common/openssl/man/man3/DH_set_default_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_ssl.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_ssl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BF_encrypt.3" />
                <createSymLink target="blowfish.3" linkName="${installdir}/common/openssl/man/man3/BF_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/blowfish.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_destroy.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_destroy.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_div_word.3" />
                <createSymLink target="BN_add_word.3" linkName="${installdir}/common/openssl/man/man3/BN_div_word.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add_word.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_want_x509_lookup.3" />
                <createSymLink target="SSL_want.3" linkName="${installdir}/common/openssl/man/man3/SSL_want_x509_lookup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_want.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_do_accept.3" />
                <createSymLink target="BIO_s_accept.3" linkName="${installdir}/common/openssl/man/man3/BIO_do_accept.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_accept.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BF_ecb_encrypt.3" />
                <createSymLink target="blowfish.3" linkName="${installdir}/common/openssl/man/man3/BF_ecb_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/blowfish.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RIPEMD160_Init.3" />
                <createSymLink target="ripemd.3" linkName="${installdir}/common/openssl/man/man3/RIPEMD160_Init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ripemd.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_tmp_rsa.3" />
                <createSymLink target="SSL_CTX_set_tmp_rsa_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_tmp_rsa.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_rsa_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_callback_arg.3" />
                <createSymLink target="BIO_set_callback.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_callback_arg.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_set_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_SESSION_get_ex_data.3" />
                <createSymLink target="SSL_SESSION_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/SSL_SESSION_get_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_SESSION_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_fp.3" />
                <createSymLink target="BIO_s_file.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_msg_callback.3" />
                <createSymLink target="SSL_CTX_set_msg_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_msg_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_msg_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_sqr_comba8.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_sqr_comba8.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_RSAPublicKey.3" />
                <createSymLink target="d2i_RSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_RSAPublicKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_RSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mpi2bn.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_mpi2bn.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_set_flags.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_set_flags.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_set_high.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_set_high.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_rsa.3" />
                <createSymLink target="SSL_CTX_set_tmp_rsa_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_rsa.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_rsa_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509.3" />
                <createSymLink target="d2i_X509.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_max_cert_list.3" />
                <createSymLink target="SSL_CTX_set_max_cert_list.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_max_cert_list.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_max_cert_list.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_PrivateKey_file.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_PrivateKey_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_ln2nid.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_ln2nid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_free_strings.3" />
                <createSymLink target="ERR_load_crypto_strings.3" linkName="${installdir}/common/openssl/man/man3/ERR_free_strings.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_load_crypto_strings.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_callback_ctrl.3" />
                <createSymLink target="SSL_CTX_ctrl.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_callback_ctrl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/HMAC_cleanup.3" />
                <createSymLink target="hmac.3" linkName="${installdir}/common/openssl/man/man3/HMAC_cleanup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/hmac.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_SealUpdate.3" />
                <createSymLink target="EVP_SealInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_SealUpdate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_SealInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_timeouts.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_timeouts.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_accept_port.3" />
                <createSymLink target="BIO_s_accept.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_accept_port.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_accept.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_one.3" />
                <createSymLink target="BN_zero.3" linkName="${installdir}/common/openssl/man/man3/BN_one.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_zero.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_fd.3" />
                <createSymLink target="BIO_s_fd.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_fd.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_fd.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_mode.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_cipher_name.3" />
                <createSymLink target="SSL_get_current_cipher.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_cipher_name.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_get_current_cipher.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_verify_ASN1_OCTET_STRING.3" />
                <createSymLink target="RSA_sign_ASN1_OCTET_STRING.3" linkName="${installdir}/common/openssl/man/man3/RSA_verify_ASN1_OCTET_STRING.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_sign_ASN1_OCTET_STRING.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_get_entry.3" />
                <createSymLink target="X509_NAME_get_index_by_NID.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_get_entry.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_get_index_by_NID.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_node_usage_stats_bio.3" />
                <createSymLink target="lh_stats.3" linkName="${installdir}/common/openssl/man/man3/lh_node_usage_stats_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lh_stats.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_RECP_CTX_free.3" />
                <createSymLink target="BN_mod_mul_reciprocal.3" linkName="${installdir}/common/openssl/man/man3/BN_RECP_CTX_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_reciprocal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_new_method.3" />
                <createSymLink target="DSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/DSA_new_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD2_Update.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD2_Update.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_ssl_connect.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_ssl_connect.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_bind_mode.3" />
                <createSymLink target="BIO_s_accept.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_bind_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_accept.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_file.3" />
                <createSymLink target="BIO_s_file.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_get_new_cb.3" />
                <createSymLink target="SSL_CTX_sess_set_get_cb.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_get_new_cb.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_get_cb.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/des_read_2passwords.3" />
                <createSymLink target="ui_compat.3" linkName="${installdir}/common/openssl/man/man3/des_read_2passwords.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui_compat.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_EC_KEY.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_EC_KEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_RSAPublicKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_RSAPublicKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ecb_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ecb_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_RSAPrivateKey.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_RSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_ssl.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_ssl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_DHparams.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_DHparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_DecryptInit.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_DecryptInit.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD2_Final.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD2_Final.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_RSAPublicKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_RSAPublicKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate_chain_file.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate_chain_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_get_default_method.3" />
                <createSymLink target="DSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/DSA_get_default_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_X509_CRL.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_X509_CRL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_mdc2.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_mdc2.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_get0_user_data.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_get0_user_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_status.3" />
                <createSymLink target="RAND_add.3" linkName="${installdir}/common/openssl/man/man3/RAND_status.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SHA1_Update.3" />
                <createSymLink target="sha.3" linkName="${installdir}/common/openssl/man/man3/SHA1_Update.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/sha.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_length_set.3" />
                <createSymLink target="ASN1_STRING_length.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_length_set.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_length.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_ctrl_pending.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_ctrl_pending.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_flags.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_flags.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_obj2txt.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_obj2txt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_set_max.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_set_max.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mod_mul.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_mod_mul.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_quiet_shutdown.3" />
                <createSymLink target="SSL_CTX_set_quiet_shutdown.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_quiet_shutdown.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_quiet_shutdown.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_PKCS7.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_PKCS7.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD2_Init.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD2_Init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MDC2_Update.3" />
                <createSymLink target="mdc2.3" linkName="${installdir}/common/openssl/man/man3/MDC2_Update.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/mdc2.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_write_buf_size.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_write_buf_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_has_matching_session_id.3" />
                <createSymLink target="SSL_CTX_set_generate_session_id.3" linkName="${installdir}/common/openssl/man/man3/SSL_has_matching_session_id.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_generate_session_id.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_PrivateKey_ASN1.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_PrivateKey_ASN1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_new_method.3" />
                <createSymLink target="DH_set_method.3" linkName="${installdir}/common/openssl/man/man3/DH_new_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_tell.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_tell.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_set_data.3" />
                <createSymLink target="X509_NAME_ENTRY_get_object.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_set_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_get_object.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_max_cert_list.3" />
                <createSymLink target="SSL_CTX_set_max_cert_list.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_max_cert_list.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_max_cert_list.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_div_words.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_div_words.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_add_info_string.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_add_info_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_PrivateKey.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_PrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_get_ex_data.3" />
                <createSymLink target="CRYPTO_set_ex_data.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_get_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/CRYPTO_set_ex_data.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_flush.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_flush.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_sqr_comba4.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_sqr_comba4.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_CRL_fp.3" />
                <createSymLink target="d2i_X509_CRL.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_CRL_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_CRL.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_conn_port.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_conn_port.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_is_word.3" />
                <createSymLink target="BN_cmp.3" linkName="${installdir}/common/openssl/man/man3/BN_is_word.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_cmp.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_set_app_data.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_set_app_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_Netscape_RSA.3" />
                <createSymLink target="d2i_RSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/d2i_Netscape_RSA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_RSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_clear_options.3" />
                <createSymLink target="SSL_CTX_set_options.3" linkName="${installdir}/common/openssl/man/man3/SSL_clear_options.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_options.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_set_low.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_set_low.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_PACK.3" />
                <createSymLink target="ERR_load_strings.3" linkName="${installdir}/common/openssl/man/man3/ERR_PACK.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_load_strings.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_asn1_to_param.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_asn1_to_param.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_set_ex_data.3" />
                <createSymLink target="RSA_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/RSA_set_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_PKCS1_SSLeay.3" />
                <createSymLink target="RSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/RSA_PKCS1_SSLeay.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_DSAPrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_DSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_nid2sn.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_nid2sn.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_conn_ip.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_conn_ip.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_nid.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_nid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_add_entry.3" />
                <createSymLink target="X509_NAME_add_entry_by_txt.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_add_entry.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_add_entry_by_txt.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_RSA_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_RSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_set_default_method.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_set_default_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ofb_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ofb_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_error.3" />
                <createSymLink target="lhash.3" linkName="${installdir}/common/openssl/man/man3/lh_error.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lhash.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_accept_good.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_accept_good.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_expand2.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_expand2.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_GET_FUNC.3" />
                <createSymLink target="ERR_GET_LIB.3" linkName="${installdir}/common/openssl/man/man3/ERR_GET_FUNC.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_GET_LIB.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_block_size.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_block_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CIPHER_get_bits.3" />
                <createSymLink target="SSL_CIPHER_get_name.3" linkName="${installdir}/common/openssl/man/man3/SSL_CIPHER_get_bits.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CIPHER_get_name.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_PKCS8PrivateKey_nid.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_PKCS8PrivateKey_nid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_quiet_shutdown.3" />
                <createSymLink target="SSL_CTX_set_quiet_shutdown.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_quiet_shutdown.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_quiet_shutdown.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_create_by_txt.3" />
                <createSymLink target="X509_NAME_ENTRY_get_object.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_create_by_txt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_get_object.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_dup_input_boolean.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_dup_input_boolean.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_pseudo_bytes.3" />
                <createSymLink target="RAND_bytes.3" linkName="${installdir}/common/openssl/man/man3/RAND_pseudo_bytes.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_bytes.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_quiet_shutdown.3" />
                <createSymLink target="SSL_CTX_set_quiet_shutdown.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_quiet_shutdown.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_quiet_shutdown.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_check.3" />
                <createSymLink target="DH_generate_parameters.3" linkName="${installdir}/common/openssl/man/man3/DH_check.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_generate_parameters.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BUF_MEM_grow.3" />
                <createSymLink target="buffer.3" linkName="${installdir}/common/openssl/man/man3/BUF_MEM_grow.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/buffer.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD5_Update.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD5_Update.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_check_PKCS1_OAEP.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_check_PKCS1_OAEP.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_update.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_update.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_convert_ex.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_convert_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_X509_REQ_NEW.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_X509_REQ_NEW.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_block_size.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_block_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_PKCS7.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_PKCS7.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_get_error_line.3" />
                <createSymLink target="ERR_get_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_get_error_line.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_get_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_sub.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_sub.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_SIG_free.3" />
                <createSymLink target="DSA_SIG_new.3" linkName="${installdir}/common/openssl/man/man3/DSA_SIG_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_SIG_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_info_callback.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_info_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_alert_type_string_long.3" />
                <createSymLink target="SSL_alert_type_string.3" linkName="${installdir}/common/openssl/man/man3/SSL_alert_type_string_long.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_alert_type_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_X509_CRL_bio.3" />
                <createSymLink target="d2i_X509_CRL.3" linkName="${installdir}/common/openssl/man/man3/d2i_X509_CRL_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_CRL.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_accept_renegotiate.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_accept_renegotiate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_cert_store.3" />
                <createSymLink target="SSL_CTX_set_cert_store.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_cert_store.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_cert_store.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_assign_EC_KEY.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_assign_EC_KEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_get_thread_id.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_get_thread_id.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_delete_entry.3" />
                <createSymLink target="X509_NAME_add_entry_by_txt.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_delete_entry.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_add_entry_by_txt.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_X509_AUX.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_X509_AUX.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_remove_session.3" />
                <createSymLink target="SSL_CTX_add_session.3" linkName="${installdir}/common/openssl/man/man3/SSL_remove_session.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_add_session.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_write.3" />
                <createSymLink target="BIO_read.3" linkName="${installdir}/common/openssl/man/man3/BIO_write.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_read.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_add_user_data.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_add_user_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_MONT_CTX_init.3" />
                <createSymLink target="BN_mod_mul_montgomery.3" linkName="${installdir}/common/openssl/man/man3/BN_MONT_CTX_init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_montgomery.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_set_default_passwd_cb_userdata.3" />
                <createSymLink target="SSL_CTX_set_default_passwd_cb.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_set_default_passwd_cb_userdata.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_default_passwd_cb.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_OpenSSL.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_OpenSSL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_cleanup.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_cleanup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_info_callback.3" />
                <createSymLink target="SSL_CTX_set_info_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_info_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_info_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_sqr_words.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_sqr_words.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSLeay_version.3" />
                <createSymLink target="OPENSSL_VERSION_NUMBER.3" linkName="${installdir}/common/openssl/man/man3/SSLeay_version.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OPENSSL_VERSION_NUMBER.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_oneline.3" />
                <createSymLink target="X509_NAME_print_ex.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_oneline.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_print_ex.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_lock.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_lock.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_set_method.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_set_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_check_private_key.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_check_private_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_MONT_CTX_free.3" />
                <createSymLink target="BN_mod_mul_montgomery.3" linkName="${installdir}/common/openssl/man/man3/BN_MONT_CTX_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_montgomery.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/HMAC_Update.3" />
                <createSymLink target="hmac.3" linkName="${installdir}/common/openssl/man/man3/HMAC_Update.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/hmac.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey_fp.3" />
                <createSymLink target="d2i_PKCS8PrivateKey.3" linkName="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_DHparams.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_DHparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_set_ex_data.3" />
                <createSymLink target="SSL_CTX_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_set_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_X509.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_X509.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_NAME.3" />
                <createSymLink target="d2i_X509_NAME.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_NAME.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_NAME.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_construct_prompt.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_construct_prompt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_DecryptInit_ex.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_DecryptInit_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_type.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_type.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_int_ctrl.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_int_ctrl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_DSAPrivateKey.3" />
                <createSymLink target="d2i_DSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/d2i_DSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_DSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_PKCS8PrivateKey_nid_bio.3" />
                <createSymLink target="d2i_PKCS8PrivateKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_PKCS8PrivateKey_nid_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_ucmp.3" />
                <createSymLink target="BN_cmp.3" linkName="${installdir}/common/openssl/man/man3/BN_ucmp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_cmp.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_set_dynlock_destroy_callback.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_set_dynlock_destroy_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_DSAPrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_DSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CONF_modules_load.3" />
                <createSymLink target="CONF_modules_load_file.3" linkName="${installdir}/common/openssl/man/man3/CONF_modules_load.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/CONF_modules_load_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_SESSION_set_time.3" />
                <createSymLink target="SSL_SESSION_get_time.3" linkName="${installdir}/common/openssl/man/man3/SSL_SESSION_set_time.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_SESSION_get_time.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RIPEMD160_Update.3" />
                <createSymLink target="ripemd.3" linkName="${installdir}/common/openssl/man/man3/RIPEMD160_Update.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ripemd.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_add_error_data.3" />
                <createSymLink target="ERR_put_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_add_error_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_put_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_cleanup.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_cleanup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_cmp_words.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_cmp_words.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_SESSION_set_ex_data.3" />
                <createSymLink target="SSL_SESSION_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/SSL_SESSION_set_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_SESSION_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_add_verify_string.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_add_verify_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_X509.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_X509.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_set_ex_data.3" />
                <createSymLink target="DSA_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/DSA_set_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_print_ex_fp.3" />
                <createSymLink target="X509_NAME_print_ex.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_print_ex_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_print_ex.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ecb3_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ecb3_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_fcrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_fcrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_print_ex_fp.3" />
                <createSymLink target="ASN1_STRING_print_ex.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_print_ex_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_print_ex.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_doall.3" />
                <createSymLink target="lhash.3" linkName="${installdir}/common/openssl/man/man3/lh_doall.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lhash.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_get_index_by_OBJ.3" />
                <createSymLink target="X509_NAME_get_index_by_NID.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_get_index_by_OBJ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_get_index_by_NID.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_gcd.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_gcd.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_hits.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_hits.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_free.3" />
                <createSymLink target="BN_new.3" linkName="${installdir}/common/openssl/man/man3/BN_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_create_param.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_create_param.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_X509_CRL.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_X509_CRL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_connect_good.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_connect_good.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_bio_pair.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_bio_pair.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_VerifyUpdate.3" />
                <createSymLink target="EVP_VerifyInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_VerifyUpdate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_VerifyInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_fix_top.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_fix_top.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_sign_setup.3" />
                <createSymLink target="DSA_sign.3" linkName="${installdir}/common/openssl/man/man3/DSA_sign_setup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_sign.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_peek_error.3" />
                <createSymLink target="ERR_get_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_peek_error.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_get_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD4_Update.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD4_Update.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_misses.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_misses.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_is_bit_set.3" />
                <createSymLink target="BN_set_bit.3" linkName="${installdir}/common/openssl/man/man3/BN_is_bit_set.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_set_bit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_set_dynlock_create_callback.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_set_dynlock_create_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_PrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_PrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ncbc_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ncbc_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_set_msg_callback_arg.3" />
                <createSymLink target="SSL_CTX_set_msg_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_set_msg_callback_arg.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_msg_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_create_by_NID.3" />
                <createSymLink target="X509_NAME_ENTRY_get_object.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_create_by_NID.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_get_object.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_write_guarantee.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_write_guarantee.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_get_digestbyname.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_get_digestbyname.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_set_odd_parity.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_set_odd_parity.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_quad_cksum.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_quad_cksum.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ede2_cfb64_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ede2_cfb64_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_insert.3" />
                <createSymLink target="lhash.3" linkName="${installdir}/common/openssl/man/man3/lh_insert.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lhash.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_EncryptUpdate.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_EncryptUpdate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_destroy_bio_pair.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_destroy_bio_pair.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_fd.3" />
                <createSymLink target="BIO_s_fd.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_fd.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_fd.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_ctrl_reset_read_request.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_ctrl_reset_read_request.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_cipher_list.3" />
                <createSymLink target="SSL_CTX_set_cipher_list.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_cipher_list.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_cipher_list.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_CTX_free.3" />
                <createSymLink target="BN_CTX_new.3" linkName="${installdir}/common/openssl/man/man3/BN_CTX_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_CTX_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ede3_cbc_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ede3_cbc_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_check_SSLv23.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_check_SSLv23.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_set_padding.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_set_padding.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_verify.3" />
                <createSymLink target="DSA_sign.3" linkName="${installdir}/common/openssl/man/man3/DSA_verify.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_sign.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_max_cert_list.3" />
                <createSymLink target="SSL_CTX_set_max_cert_list.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_max_cert_list.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_max_cert_list.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_socket.3" />
                <createSymLink target="BIO_s_socket.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_socket.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_socket.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD5.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD5.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_peek_last_error.3" />
                <createSymLink target="ERR_get_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_peek_last_error.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_get_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_md.3" />
                <createSymLink target="BIO_f_md.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_md.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_md.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_RSAPrivateKey.3" />
                <createSymLink target="d2i_RSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_RSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_RSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CIPHER_get_version.3" />
                <createSymLink target="SSL_CIPHER_get_name.3" linkName="${installdir}/common/openssl/man/man3/SSL_CIPHER_get_version.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CIPHER_get_name.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_read_request.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_read_request.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_enc_read.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_enc_read.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_bio_X509_AUX.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_bio_X509_AUX.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_nid.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_nid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_init.3" />
                <createSymLink target="BN_new.3" linkName="${installdir}/common/openssl/man/man3/BN_init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_sub_word.3" />
                <createSymLink target="BN_add_word.3" linkName="${installdir}/common/openssl/man/man3/BN_sub_word.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add_word.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_alert_desc_string_long.3" />
                <createSymLink target="SSL_alert_type_string.3" linkName="${installdir}/common/openssl/man/man3/SSL_alert_desc_string_long.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_alert_type_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_conn_ip.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_conn_ip.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD5_Init.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD5_Init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_alert_desc_string.3" />
                <createSymLink target="SSL_alert_type_string.3" linkName="${installdir}/common/openssl/man/man3/SSL_alert_desc_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_alert_type_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_pseudo_rand.3" />
                <createSymLink target="BN_rand.3" linkName="${installdir}/common/openssl/man/man3/BN_pseudo_rand.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_rand.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_string_to_2keys.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_string_to_2keys.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_size.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_get_default_method.3" />
                <createSymLink target="RSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/RSA_get_default_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_accept_bios.3" />
                <createSymLink target="BIO_s_accept.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_accept_bios.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_accept.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_reset.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_reset.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_pop.3" />
                <createSymLink target="BIO_push.3" linkName="${installdir}/common/openssl/man/man3/BIO_pop.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_push.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_pending.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_pending.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_NETSCAPE_CERT_SEQUENCE.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_NETSCAPE_CERT_SEQUENCE.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_cipher.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_cipher.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_create.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_create.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_new_method.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_new_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_add_input_string.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_add_input_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_generate_v3.3" />
                <createSymLink target="ASN1_generate_nconf.3" linkName="${installdir}/common/openssl/man/man3/ASN1_generate_v3.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_generate_nconf.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_fp.3" />
                <createSymLink target="BIO_s_file.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CipherInit.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CipherInit.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_DSA_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_DSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_X509_fp.3" />
                <createSymLink target="d2i_X509.3" linkName="${installdir}/common/openssl/man/man3/d2i_X509_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_node_stats.3" />
                <createSymLink target="lh_stats.3" linkName="${installdir}/common/openssl/man/man3/lh_node_stats.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lh_stats.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_use_RSAPrivateKey_file.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_use_RSAPrivateKey_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_ssl.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_ssl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_doall_arg.3" />
                <createSymLink target="lhash.3" linkName="${installdir}/common/openssl/man/man3/lh_doall_arg.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lhash.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_DSA.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_DSA.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_OpenSSL.3" />
                <createSymLink target="DH_set_method.3" linkName="${installdir}/common/openssl/man/man3/DH_OpenSSL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_free_all.3" />
                <createSymLink target="BIO_new.3" linkName="${installdir}/common/openssl/man/man3/BIO_free_all.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_certificate_ASN1.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_certificate_ASN1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_X509_REQ_fp.3" />
                <createSymLink target="d2i_X509_REQ.3" linkName="${installdir}/common/openssl/man/man3/d2i_X509_REQ_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_REQ.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_CTX_end.3" />
                <createSymLink target="BN_CTX_start.3" linkName="${installdir}/common/openssl/man/man3/BN_CTX_end.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_CTX_start.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_is_one.3" />
                <createSymLink target="BN_cmp.3" linkName="${installdir}/common/openssl/man/man3/BN_is_one.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_cmp.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_set_default_method.3" />
                <createSymLink target="DSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/DSA_set_default_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_ex_data.3" />
                <createSymLink target="SSL_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_add_entry_by_OBJ.3" />
                <createSymLink target="X509_NAME_add_entry_by_txt.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_add_entry_by_OBJ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_add_entry_by_txt.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_reason_error_string.3" />
                <createSymLink target="ERR_error_string.3" linkName="${installdir}/common/openssl/man/man3/ERR_reason_error_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_error_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_accept.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_accept.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_get_ex_data.3" />
                <createSymLink target="RSA_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/RSA_get_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_ctrl.3" />
                <createSymLink target="SSL_CTX_ctrl.3" linkName="${installdir}/common/openssl/man/man3/SSL_ctrl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_cmp.3" />
                <createSymLink target="ASN1_STRING_length.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_cmp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_length.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_MONT_CTX_copy.3" />
                <createSymLink target="BN_mod_mul_montgomery.3" linkName="${installdir}/common/openssl/man/man3/BN_MONT_CTX_copy.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_montgomery.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mod_add.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_mod_add.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_cache_full.3" />
                <createSymLink target="SSL_CTX_sess_number.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_cache_full.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_number.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/des_read_pw.3" />
                <createSymLink target="ui_compat.3" linkName="${installdir}/common/openssl/man/man3/des_read_pw.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui_compat.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_verify_depth.3" />
                <createSymLink target="SSL_CTX_set_verify.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_verify_depth.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_verify.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_num_bits_word.3" />
                <createSymLink target="BN_num_bytes.3" linkName="${installdir}/common/openssl/man/man3/BN_num_bits_word.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_num_bytes.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_PrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_PrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_seek.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_seek.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_X509_REQ.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_X509_REQ.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_2.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_2.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_free.3" />
                <createSymLink target="lhash.3" linkName="${installdir}/common/openssl/man/man3/lh_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lhash.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_print.3" />
                <createSymLink target="X509_NAME_print_ex.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_print.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_print_ex.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_X509.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_X509.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_PKCS8PrivateKey_nid_fp.3" />
                <createSymLink target="d2i_PKCS8PrivateKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_PKCS8PrivateKey_nid_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_PKCS8PrivateKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_key_sched.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_key_sched.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BF_set_key.3" />
                <createSymLink target="blowfish.3" linkName="${installdir}/common/openssl/man/man3/BF_set_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/blowfish.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_info_callback.3" />
                <createSymLink target="SSL_CTX_set_info_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_info_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_info_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_iv_length.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_iv_length.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_init.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_get_remove_cb.3" />
                <createSymLink target="SSL_CTX_sess_set_get_cb.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_get_remove_cb.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_get_cb.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_tmp_dh.3" />
                <createSymLink target="SSL_CTX_set_tmp_dh_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_tmp_dh.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_tmp_dh_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_info_callback.3" />
                <createSymLink target="SSL_CTX_set_info_callback.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_info_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_info_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_options.3" />
                <createSymLink target="SSL_CTX_set_options.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_options.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_options.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CipherInit_ex.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CipherInit_ex.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_part_recursive.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_part_recursive.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_verify_depth.3" />
                <createSymLink target="SSL_CTX_get_verify_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_verify_depth.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_REQ_bio.3" />
                <createSymLink target="d2i_X509_REQ.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_REQ_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_REQ.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CIPHER_description.3" />
                <createSymLink target="SSL_CIPHER_get_name.3" linkName="${installdir}/common/openssl/man/man3/SSL_CIPHER_description.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CIPHER_get_name.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_SealFinal.3" />
                <createSymLink target="EVP_SealInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_SealFinal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_SealInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/HMAC_Final.3" />
                <createSymLink target="hmac.3" linkName="${installdir}/common/openssl/man/man3/HMAC_Final.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/hmac.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MDC2.3" />
                <createSymLink target="mdc2.3" linkName="${installdir}/common/openssl/man/man3/MDC2.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/mdc2.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_do_verify.3" />
                <createSymLink target="DSA_do_sign.3" linkName="${installdir}/common/openssl/man/man3/DSA_do_verify.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_do_sign.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OPENSSL_no_config.3" />
                <createSymLink target="OPENSSL_config.3" linkName="${installdir}/common/openssl/man/man3/OPENSSL_no_config.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OPENSSL_config.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_param_to_asn1.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_param_to_asn1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BF_decrypt.3" />
                <createSymLink target="blowfish.3" linkName="${installdir}/common/openssl/man/man3/BF_decrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/blowfish.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_ssl_renegotiate_timeout.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_ssl_renegotiate_timeout.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_shutdown_wr.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_shutdown_wr.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_is_prime.3" />
                <createSymLink target="BN_generate_prime.3" linkName="${installdir}/common/openssl/man/man3/BN_is_prime.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_generate_prime.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_md_null.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_md_null.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_ssl_renegotiate_bytes.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_ssl_renegotiate_bytes.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSAparams_print_fp.3" />
                <createSymLink target="RSA_print.3" linkName="${installdir}/common/openssl/man/man3/DSAparams_print_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_print.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_new.3" />
                <createSymLink target="lhash.3" linkName="${installdir}/common/openssl/man/man3/lh_new.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lhash.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_dup.3" />
                <createSymLink target="BN_copy.3" linkName="${installdir}/common/openssl/man/man3/BN_dup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_copy.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OpenSSL_add_all_digests.3" />
                <createSymLink target="OpenSSL_add_all_algorithms.3" linkName="${installdir}/common/openssl/man/man3/OpenSSL_add_all_digests.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OpenSSL_add_all_algorithms.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_add_none.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_add_none.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_new_mem_buf.3" />
                <createSymLink target="BIO_s_mem.3" linkName="${installdir}/common/openssl/man/man3/BIO_new_mem_buf.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_mem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_write_buf_size.3" />
                <createSymLink target="BIO_s_bio.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_write_buf_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_bio.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_generate_session_id.3" />
                <createSymLink target="SSL_CTX_set_generate_session_id.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_generate_session_id.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_generate_session_id.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_verify_callback.3" />
                <createSymLink target="SSL_CTX_get_verify_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_verify_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_dup.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_dup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_DSAPublicKey.3" />
                <createSymLink target="d2i_DSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_DSAPublicKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_DSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_OAEP.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_OAEP.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ede3_cbcm_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ede3_cbcm_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_cipher_status.3" />
                <createSymLink target="BIO_f_cipher.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_cipher_status.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_cipher.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_sub_words.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_sub_words.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_callback_ctrl.3" />
                <createSymLink target="SSL_CTX_ctrl.3" linkName="${installdir}/common/openssl/man/man3/SSL_callback_ctrl.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CipherUpdate.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CipherUpdate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_set_object.3" />
                <createSymLink target="X509_NAME_ENTRY_get_object.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_set_object.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_get_object.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_mem_ptr.3" />
                <createSymLink target="BIO_s_mem.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_mem_ptr.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_mem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_conn_int_port.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_conn_int_port.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_mul_low_recursive.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_mul_low_recursive.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_mem_buf.3" />
                <createSymLink target="BIO_s_mem.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_mem_buf.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_mem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_cfb_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_cfb_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BF_ofb64_encrypt.3" />
                <createSymLink target="blowfish.3" linkName="${installdir}/common/openssl/man/man3/BF_ofb64_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/blowfish.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_ctrl_wpending.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_ctrl_wpending.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_load_UI_strings.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/ERR_load_UI_strings.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_new_cb.3" />
                <createSymLink target="SSL_CTX_sess_set_get_cb.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_new_cb.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_sess_set_get_cb.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_ede2_cbc_encrypt.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_ede2_cbc_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_SignFinal.3" />
                <createSymLink target="EVP_SignInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_SignFinal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_SignInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_dup.3" />
                <createSymLink target="ASN1_STRING_length.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_dup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_length.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_peek_error_line.3" />
                <createSymLink target="ERR_get_error.3" linkName="${installdir}/common/openssl/man/man3/ERR_peek_error_line.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_get_error.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_dss.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_dss.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_DSAparams.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_DSAparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_PKCS7.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_PKCS7.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ASN1_STRING_free.3" />
                <createSymLink target="ASN1_STRING_new.3" linkName="${installdir}/common/openssl/man/man3/ASN1_STRING_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ASN1_STRING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_session_cache_mode.3" />
                <createSymLink target="SSL_CTX_set_session_cache_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_session_cache_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_session_cache_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_SIG.3" />
                <createSymLink target="d2i_X509_SIG.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_SIG.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_SIG.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_DSAPrivateKey.3" />
                <createSymLink target="d2i_DSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_DSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_DSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_entry_count.3" />
                <createSymLink target="X509_NAME_get_index_by_NID.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_entry_count.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_get_index_by_NID.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_get0_result.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_get0_result.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_get_new_dynlockid.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_get_new_dynlockid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CipherFinal.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CipherFinal.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_debug_callback.3" />
                <createSymLink target="BIO_set_callback.3" linkName="${installdir}/common/openssl/man/man3/BIO_debug_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_set_callback.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_SSLeay.3" />
                <createSymLink target="RAND_set_rand_method.3" linkName="${installdir}/common/openssl/man/man3/RAND_SSLeay.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_set_rand_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_bio.3" />
                <createSymLink target="d2i_X509.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_get_data.3" />
                <createSymLink target="X509_NAME_ENTRY_get_object.3" linkName="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_get_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_NAME_ENTRY_get_object.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_type.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_type.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_DSA_SIG.3" />
                <createSymLink target="d2i_DSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/d2i_DSA_SIG.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_DSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_new.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_new.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_ssl_shutdown.3" />
                <createSymLink target="BIO_f_ssl.3" linkName="${installdir}/common/openssl/man/man3/BIO_ssl_shutdown.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_ssl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_destroy_dynlockid.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_destroy_dynlockid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_private_decrypt.3" />
                <createSymLink target="RSA_public_encrypt.3" linkName="${installdir}/common/openssl/man/man3/RSA_private_decrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_public_encrypt.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/CRYPTO_num_locks.3" />
                <createSymLink target="threads.3" linkName="${installdir}/common/openssl/man/man3/CRYPTO_num_locks.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/threads.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_padding_check_PKCS1_type_2.3" />
                <createSymLink target="RSA_padding_add_PKCS1_type_1.3" linkName="${installdir}/common/openssl/man/man3/RSA_padding_check_PKCS1_type_2.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_padding_add_PKCS1_type_1.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_mode.3" />
                <createSymLink target="SSL_CTX_set_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_mode.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_get_rand_method.3" />
                <createSymLink target="RAND_set_rand_method.3" linkName="${installdir}/common/openssl/man/man3/RAND_get_rand_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_set_rand_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_RSA_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_RSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_stats_bio.3" />
                <createSymLink target="lh_stats.3" linkName="${installdir}/common/openssl/man/man3/lh_stats_bio.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lh_stats.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_md.3" />
                <createSymLink target="BIO_f_md.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_md.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_md.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_close.3" />
                <createSymLink target="BIO_ctrl.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_close.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_ctrl.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_RSA_PUBKEY.3" />
                <createSymLink target="d2i_RSAPublicKey.3" linkName="${installdir}/common/openssl/man/man3/i2d_RSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_RSAPublicKey.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_bn2dec.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_bn2dec.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_block_size.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_block_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_ex_data.3" />
                <createSymLink target="SSL_CTX_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_random_key.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_random_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_nid2ln.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_nid2ln.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_callback.3" />
                <createSymLink target="SSL_CTX_get_verify_mode.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_callback.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_get_verify_mode.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_RSAPrivateKey_ASN1.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_RSAPrivateKey_ASN1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_cmp.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_cmp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_sha.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_sha.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_flags.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_CTX_flags.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RC4.3" />
                <createSymLink target="rc4.3" linkName="${installdir}/common/openssl/man/man3/RC4.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/rc4.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_DSA_PUBKEY.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_DSA_PUBKEY.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/d2i_509_CRL_fp.3" />
                <createSymLink target="d2i_X509_CRL.3" linkName="${installdir}/common/openssl/man/man3/d2i_509_CRL_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_CRL.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_free.3" />
                <createSymLink target="DSA_new.3" linkName="${installdir}/common/openssl/man/man3/DSA_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_print.3" />
                <createSymLink target="BN_bn2bin.3" linkName="${installdir}/common/openssl/man/man3/BN_print.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_bn2bin.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_PKEY_assign_DH.3" />
                <createSymLink target="EVP_PKEY_set1_RSA.3" linkName="${installdir}/common/openssl/man/man3/EVP_PKEY_assign_DH.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_PKEY_set1_RSA.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/HMAC_Init.3" />
                <createSymLink target="hmac.3" linkName="${installdir}/common/openssl/man/man3/HMAC_Init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/hmac.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_fp.3" />
                <createSymLink target="BIO_s_file.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_file.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_DSAparams.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_DSAparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_CRL.3" />
                <createSymLink target="d2i_X509_CRL.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_CRL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_CRL.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/HMAC.3" />
                <createSymLink target="hmac.3" linkName="${installdir}/common/openssl/man/man3/HMAC.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/hmac.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_cleanup.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_cleanup.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_accept_port.3" />
                <createSymLink target="BIO_s_accept.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_accept_port.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_accept.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_dss1.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_dss1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_dup_info_string.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_dup_info_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SHA1_Init.3" />
                <createSymLink target="sha.3" linkName="${installdir}/common/openssl/man/man3/SHA1_Init.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/sha.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_ex_data.3" />
                <createSymLink target="SSL_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/lh_retrieve.3" />
                <createSymLink target="lhash.3" linkName="${installdir}/common/openssl/man/man3/lh_retrieve.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/lhash.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_set_verify_depth.3" />
                <createSymLink target="SSL_CTX_set_verify.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_set_verify_depth.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_verify.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_DigestUpdate.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_DigestUpdate.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_rshift1.3" />
                <createSymLink target="BN_set_bit.3" linkName="${installdir}/common/openssl/man/man3/BN_rshift1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_set_bit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_lshift1.3" />
                <createSymLink target="BN_set_bit.3" linkName="${installdir}/common/openssl/man/man3/BN_lshift1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_set_bit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_get_digestbyobj.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_get_digestbyobj.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_MD_CTX_block_size.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_MD_CTX_block_size.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SHA1.3" />
                <createSymLink target="sha.3" linkName="${installdir}/common/openssl/man/man3/SHA1.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/sha.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_OpenSSL.3" />
                <createSymLink target="DSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/DSA_OpenSSL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_DHparams.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_DHparams.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mod.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_mod.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_puts.3" />
                <createSymLink target="BIO_read.3" linkName="${installdir}/common/openssl/man/man3/BIO_puts.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_read.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_pop_to_mark.3" />
                <createSymLink target="ERR_set_mark.3" linkName="${installdir}/common/openssl/man/man3/ERR_pop_to_mark.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_set_mark.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/bn_sqr_recursive.3" />
                <createSymLink target="bn_internal.3" linkName="${installdir}/common/openssl/man/man3/bn_sqr_recursive.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/bn_internal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_MONT_CTX_set.3" />
                <createSymLink target="BN_mod_mul_montgomery.3" linkName="${installdir}/common/openssl/man/man3/BN_MONT_CTX_set.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_montgomery.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/MD4_Final.3" />
                <createSymLink target="md5.3" linkName="${installdir}/common/openssl/man/man3/MD4_Final.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/md5.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_BLINDING_get_flags.3" />
                <createSymLink target="BN_BLINDING_new.3" linkName="${installdir}/common/openssl/man/man3/BN_BLINDING_get_flags.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_BLINDING_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_should_write.3" />
                <createSymLink target="BIO_should_retry.3" linkName="${installdir}/common/openssl/man/man3/BIO_should_write.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_should_retry.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_free.3" />
                <createSymLink target="RSA_new.3" linkName="${installdir}/common/openssl/man/man3/RSA_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_set_session_id_context.3" />
                <createSymLink target="SSL_CTX_set_session_id_context.3" linkName="${installdir}/common/openssl/man/man3/SSL_set_session_id_context.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_session_id_context.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_load_error_strings.3" />
                <createSymLink target="ERR_load_crypto_strings.3" linkName="${installdir}/common/openssl/man/man3/SSL_load_error_strings.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_load_crypto_strings.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_md2.3" />
                <createSymLink target="EVP_DigestInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_md2.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_DigestInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DES_string_to_key.3" />
                <createSymLink target="des.3" linkName="${installdir}/common/openssl/man/man3/DES_string_to_key.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/des.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RAND_seed.3" />
                <createSymLink target="RAND_add.3" linkName="${installdir}/common/openssl/man/man3/RAND_seed.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RAND_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_PrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_PrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_is_odd.3" />
                <createSymLink target="BN_cmp.3" linkName="${installdir}/common/openssl/man/man3/BN_is_odd.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_cmp.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_should_io_special.3" />
                <createSymLink target="BIO_should_retry.3" linkName="${installdir}/common/openssl/man/man3/BIO_should_io_special.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_should_retry.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_key_length.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_key_length.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/ERR_lib_error_string.3" />
                <createSymLink target="ERR_error_string.3" linkName="${installdir}/common/openssl/man/man3/ERR_lib_error_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ERR_error_string.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SHA1_Final.3" />
                <createSymLink target="sha.3" linkName="${installdir}/common/openssl/man/man3/SHA1_Final.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/sha.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_add_session.3" />
                <createSymLink target="SSL_CTX_add_session.3" linkName="${installdir}/common/openssl/man/man3/SSL_add_session.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_add_session.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/X509_free.3" />
                <createSymLink target="X509_new.3" linkName="${installdir}/common/openssl/man/man3/X509_free.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/X509_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_get_shutdown.3" />
                <createSymLink target="SSL_set_shutdown.3" linkName="${installdir}/common/openssl/man/man3/SSL_get_shutdown.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_set_shutdown.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_mod_exp.3" />
                <createSymLink target="BN_add.3" linkName="${installdir}/common/openssl/man/man3/BN_mod_exp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_add.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_print_fp.3" />
                <createSymLink target="RSA_print.3" linkName="${installdir}/common/openssl/man/man3/DSA_print_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_print.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_get_cipherbynid.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_get_cipherbynid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_DSAPrivateKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_DSAPrivateKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_read_RSAPublicKey.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_read_RSAPublicKey.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DH_get_ex_data.3" />
                <createSymLink target="DH_get_ex_new_index.3" linkName="${installdir}/common/openssl/man/man3/DH_get_ex_data.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/DH_get_ex_new_index.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/DSA_print.3" />
                <createSymLink target="RSA_print.3" linkName="${installdir}/common/openssl/man/man3/DSA_print.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_print.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BF_cbc_encrypt.3" />
                <createSymLink target="blowfish.3" linkName="${installdir}/common/openssl/man/man3/BF_cbc_encrypt.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/blowfish.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_CTX_get_client_cert_cb.3" />
                <createSymLink target="SSL_CTX_set_client_cert_cb.3" linkName="${installdir}/common/openssl/man/man3/SSL_CTX_get_client_cert_cb.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_set_client_cert_cb.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_clear.3" />
                <createSymLink target="BN_new.3" linkName="${installdir}/common/openssl/man/man3/BN_clear.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_new.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/OBJ_sn2nid.3" />
                <createSymLink target="OBJ_nid2obj.3" linkName="${installdir}/common/openssl/man/man3/OBJ_sn2nid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/OBJ_nid2obj.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_get_conn_hostname.3" />
                <createSymLink target="BIO_s_connect.3" linkName="${installdir}/common/openssl/man/man3/BIO_get_conn_hostname.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_s_connect.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/EVP_CIPHER_type.3" />
                <createSymLink target="EVP_EncryptInit.3" linkName="${installdir}/common/openssl/man/man3/EVP_CIPHER_type.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/EVP_EncryptInit.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_X509_CRL.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_X509_CRL.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/des_read_pw_string.3" />
                <createSymLink target="ui_compat.3" linkName="${installdir}/common/openssl/man/man3/des_read_pw_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui_compat.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/UI_add_error_string.3" />
                <createSymLink target="ui.3" linkName="${installdir}/common/openssl/man/man3/UI_add_error_string.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/ui.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/i2d_X509_REQ_fp.3" />
                <createSymLink target="d2i_X509_REQ.3" linkName="${installdir}/common/openssl/man/man3/i2d_X509_REQ_fp.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/d2i_X509_REQ.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/RSA_null_method.3" />
                <createSymLink target="RSA_set_method.3" linkName="${installdir}/common/openssl/man/man3/RSA_null_method.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/RSA_set_method.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BIO_set_cipher.3" />
                <createSymLink target="BIO_f_cipher.3" linkName="${installdir}/common/openssl/man/man3/BIO_set_cipher.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BIO_f_cipher.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/PEM_write_bio_PKCS8PrivateKey_nid.3" />
                <createSymLink target="pem.3" linkName="${installdir}/common/openssl/man/man3/PEM_write_bio_PKCS8PrivateKey_nid.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/pem.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/SSL_use_RSAPrivateKey_file.3" />
                <createSymLink target="SSL_CTX_use_certificate.3" linkName="${installdir}/common/openssl/man/man3/SSL_use_RSAPrivateKey_file.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/SSL_CTX_use_certificate.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/openssl/man/man3/BN_RECP_CTX_new.3" />
                <createSymLink target="BN_mod_mul_reciprocal.3" linkName="${installdir}/common/openssl/man/man3/BN_RECP_CTX_new.3" >
                     <ruleList>
                         <fileTest path="${installdir}/common/openssl/man/man3/BN_mod_mul_reciprocal.3" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libMagickCore.so.2" />
                <createSymLink target="libMagickCore.so.2.0.0" linkName="${installdir}/common/lib/libMagickCore.so.2" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libMagickCore.so.2.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libMagick++.so" />
                <createSymLink target="libMagick++.so.2.0.0" linkName="${installdir}/common/lib/libMagick++.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libMagick++.so.2.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libMagickWand.so" />
                <createSymLink target="libMagickWand.so.2.0.0" linkName="${installdir}/common/lib/libMagickWand.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libMagickWand.so.2.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libMagickCore.so" />
                <createSymLink target="libMagickCore.so.2.0.0" linkName="${installdir}/common/lib/libMagickCore.so" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libMagickCore.so.2.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libMagick++.so.2" />
                <createSymLink target="libMagick++.so.2.0.0" linkName="${installdir}/common/lib/libMagick++.so.2" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libMagick++.so.2.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
               <deleteFile path="${installdir}/common/lib/libMagickWand.so.2" />
                <createSymLink target="libMagickWand.so.2.0.0" linkName="${installdir}/common/lib/libMagickWand.so.2" >
                     <ruleList>
                         <fileTest path="${installdir}/common/lib/libMagickWand.so.2.0.0" condition="exists" />
                     </ruleList>
                </createSymLink>
            
                        <dos2unix files="${installdir}/virtual-tomcat/setclasspath.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/setclasspath.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/setclasspath.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/shutdown-using-launcher.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/shutdown-using-launcher.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/shutdown-using-launcher.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/startup-using-launcher.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/startup-using-launcher.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/startup-using-launcher.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/catalina.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/catalina.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/catalina.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/startup.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/startup.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/startup.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/shutdown.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/shutdown.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/shutdown.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/tool-wrapper-using-launcher.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/tool-wrapper-using-launcher.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/tool-wrapper-using-launcher.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/version.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/version.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/version.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/digest.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/digest.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/digest.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/virtual-tomcat/tool-wrapper.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/virtual-tomcat/tool-wrapper.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/virtual-tomcat/tool-wrapper.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/tomcat/bin/setclasspath.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/tomcat/bin/setclasspath.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/tomcat/bin/setclasspath.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/tomcat/bin/catalina.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/tomcat/bin/catalina.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/tomcat/bin/catalina.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/tomcat/bin/startup.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/tomcat/bin/startup.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/tomcat/bin/startup.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/tomcat/bin/shutdown.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/tomcat/bin/shutdown.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/tomcat/bin/shutdown.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/tomcat/bin/version.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/tomcat/bin/version.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/tomcat/bin/version.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/tomcat/bin/digest.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/tomcat/bin/digest.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/tomcat/bin/digest.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/tomcat/bin/tool-wrapper.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/tomcat/bin/tool-wrapper.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/tomcat/bin/tool-wrapper.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/lib/jexec" >
                           <ruleList>
                              <fileTest path="${installdir}/java/lib/jexec" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/java/bin/jvisualvm" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jvisualvm" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jvisualvm" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jps" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jps" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/native2ascii" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/native2ascii" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jconsole" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jconsole" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/keytool" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/keytool" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jstat" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jstat" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/javadoc" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/javadoc" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/java" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/java" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/java/bin/HtmlConverter" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/java/bin/HtmlConverter" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/HtmlConverter" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/apt" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/apt" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jdb" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jdb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/policytool" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/policytool" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/unpack200" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/unpack200" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/schemagen" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/schemagen" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/javaws" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/javaws" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/rmic" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/rmic" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jar" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jar" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/rmid" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/rmid" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/javah" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/javah" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jstatd" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jstatd" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/javac" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/javac" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jsadebugd" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jsadebugd" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/rmiregistry" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/rmiregistry" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jinfo" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jinfo" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/idlj" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/idlj" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/xjc" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/xjc" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/wsimport" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/wsimport" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/serialver" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/serialver" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/wsgen" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/wsgen" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/orbd" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/orbd" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/servertool" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/servertool" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/java/bin/java-rmi.cgi" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/java/bin/java-rmi.cgi" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/java-rmi.cgi" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jmap" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jmap" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/pack200" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/pack200" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/appletviewer" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/appletviewer" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/javap" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/javap" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/tnameserv" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/tnameserv" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jstack" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jstack" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jhat" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jhat" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jrunscript" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jrunscript" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/extcheck" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/extcheck" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jarsigner" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jarsigner" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/java/bin/jcontrol" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/java/bin/jcontrol" >
                           <ruleList>
                              <fileTest path="${installdir}/java/bin/jcontrol" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/jexec" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/jexec" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/java/jre/lib/deploy/messages_zh_HK.properties" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/deploy/messages_zh_HK.properties" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/deploy/messages_zh_HK.properties" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libhprof.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libhprof.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libdeploy.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libdeploy.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjpeg.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjpeg.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libattach.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libattach.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libioser12.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libioser12.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libsplashscreen.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libsplashscreen.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/motif21/libmawt.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/motif21/libmawt.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/librmi.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/librmi.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/jli/libjli.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/jli/libjli.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/server/libjvm.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/server/libjvm.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjsoundalsa.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjsoundalsa.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjdwp.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjdwp.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libcmm.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libcmm.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjawt.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjawt.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libj2pkcs11.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libj2pkcs11.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/headless/libmawt.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/headless/libmawt.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libmlib_image.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libmlib_image.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjsound.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjsound.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjsig.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjsig.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libJdbcOdbc.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libJdbcOdbc.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/xawt/libmawt.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/xawt/libmawt.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libj2gss.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libj2gss.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libnpt.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libnpt.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libawt.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libawt.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libnpjp2.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libnpjp2.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libdt_socket.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libdt_socket.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjava_crw_demo.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjava_crw_demo.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libnet.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libnet.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libmanagement.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libmanagement.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libverify.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libverify.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libinstrument.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libinstrument.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/client/libjvm.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/client/libjvm.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libdcpr.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libdcpr.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjava.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjava.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libzip.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libzip.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libsaproc.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libsaproc.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/native_threads/libhpi.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/native_threads/libhpi.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libj2pcsc.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libj2pcsc.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjavaplugin_nscp_gcc29.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjavaplugin_nscp_gcc29.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libnio.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libnio.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjavaplugin_nscp.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjavaplugin_nscp.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libfontmanager.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libfontmanager.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjavaplugin_jni.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjavaplugin_jni.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libunpack.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libunpack.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/lib/i386/libjaas_unix.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/lib/i386/libjaas_unix.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/keytool" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/keytool" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/java" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/java" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/policytool" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/policytool" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/unpack200" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/unpack200" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/javaws" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/javaws" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/rmid" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/rmid" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/rmiregistry" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/rmiregistry" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/java_vm" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/java_vm" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/orbd" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/orbd" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/servertool" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/servertool" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/pack200" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/pack200" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/tnameserv" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/tnameserv" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/java/jre/bin/jcontrol" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/java/jre/bin/jcontrol" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/bin/jcontrol" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/plugin/i386/ns7/libjavaplugin_oji.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/plugin/i386/ns7/libjavaplugin_oji.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/java/jre/plugin/i386/ns7-gcc29/libjavaplugin_oji.so" >
                           <ruleList>
                              <fileTest path="${installdir}/java/jre/plugin/i386/ns7-gcc29/libjavaplugin_oji.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_gbk.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_gbk.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/euc2004_sjis2004.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/euc2004_sjis2004.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_iso8859_1.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_iso8859_1.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_ascii.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_ascii.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/latin2_and_win1250.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/latin2_and_win1250.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_euc2004.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_euc2004.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_euc_kr.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_euc_kr.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/dict_snowball.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/dict_snowball.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/euc_cn_and_mic.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/euc_cn_and_mic.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/plpgsql.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/plpgsql.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/cyrillic_and_mic.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/cyrillic_and_mic.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/libecpg_compat.so.3.2" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/libecpg_compat.so.3.2" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_johab.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_johab.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_cyrillic.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_cyrillic.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_win.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_win.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/pgxs/src/test/regress/pg_regress" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/pgxs/src/test/regress/pg_regress" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/lib/pgxs/config/install-sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/pgxs/config/install-sh" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/pgxs/config/install-sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_big5.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_big5.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/libpqwalreceiver.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/libpqwalreceiver.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/euc_kr_and_mic.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/euc_kr_and_mic.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/libpq.so.5.3" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/libpq.so.5.3" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_uhc.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_uhc.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/ascii_and_mic.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/ascii_and_mic.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/euc_tw_and_big5.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/euc_tw_and_big5.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_euc_tw.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_euc_tw.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/latin_and_mic.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/latin_and_mic.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/libecpg.so.6.2" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/libecpg.so.6.2" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_gb18030.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_gb18030.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_sjis2004.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_sjis2004.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_euc_jp.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_euc_jp.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_sjis.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_sjis.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/libpgtypes.so.3.1" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/libpgtypes.so.3.1" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/euc_jp_and_sjis.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/euc_jp_and_sjis.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_euc_cn.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_euc_cn.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/lib/utf8_and_iso8859.so" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/lib/utf8_and_iso8859.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_dump.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_dump.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/reindexdb" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/reindexdb" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/reindexdb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/createdb.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/createdb.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/createuser.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/createuser.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/createuser" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/createuser" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/createuser" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/pg_resetxlog" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_resetxlog" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_resetxlog" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/pg_dump" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_dump" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_dump" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/dropdb.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/dropdb.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/pg_restore" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_restore" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_restore" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/createlang" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/createlang" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/createlang" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/setenv.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/setenv.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/setenv.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/dropuser.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/dropuser.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/ecpg.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/ecpg.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/dropuser" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/dropuser" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/dropuser" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/vacuumdb" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/vacuumdb" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/vacuumdb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/pg_config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_config" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/initdb.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/initdb.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_resetxlog.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_resetxlog.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/pg_controldata" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_controldata" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_controldata" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/droplang.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/droplang.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/postgres" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/postgres" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/dropdb" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/dropdb" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/dropdb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/initdb" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/initdb" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/initdb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/clusterdb.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/clusterdb.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_restore.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_restore.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/createlang.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/createlang.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/createdb" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/createdb" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/createdb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_controldata.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_controldata.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/psql" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/psql" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/psql" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_config.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_config.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/pg_ctl" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_ctl" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_ctl" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/clusterdb" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/clusterdb" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/clusterdb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/vacuumdb.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/vacuumdb.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/reindexdb.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/reindexdb.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/droplang" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/droplang" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/droplang" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/ecpg" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/ecpg" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/ecpg" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_dumpall.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_dumpall.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/bin/pg_dumpall" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_dumpall" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_dumpall" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/psql.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/psql.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/postgresql/bin/pg_ctl.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/bin/pg_ctl.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/postgresql/share/postgres.bki" abortOnError="0" showMessageOnError="0" />
                        <dos2unix files="${installdir}/postgresql/scripts/ctl.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/postgresql/scripts/ctl.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/postgresql/scripts/ctl.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/pdf2ps" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/pdf2ps" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/pdf2ps" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/gsdj" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gsdj" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gsdj" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifpos" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifpos" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/openssl.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/openssl.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/printafm" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/printafm" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/printafm" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/wmf2x" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/wmf2x" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/wmf2eps" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/wmf2eps" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifrsize" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifrsize" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/rgb2gif" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/rgb2gif" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/font2c" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/font2c" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/font2c" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/text2gif" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/text2gif" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/rdjpgcom" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/rdjpgcom" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/dumphint" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/dumphint" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/dumphint" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2pdfwr" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2pdfwr" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2pdfwr" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/tput" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/tput" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2epsi" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2epsi" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2epsi" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/fixmswrd.pl" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/fixmswrd.pl" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/fixmswrd.pl" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/pdf2dsc" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/pdf2dsc" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/pdf2dsc" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/gsbj" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gsbj" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gsbj" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/wmf2gd" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/wmf2gd" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/c_rehash" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/c_rehash" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/c_rehash" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gif2ps" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gif2ps" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/cjpeg" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/cjpeg" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/giffix" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/giffix" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ncurses5-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ncurses5-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ncurses5-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/pf2afm" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/pf2afm" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/pf2afm" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/libpng12-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/libpng12-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/libpng12-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifcomb" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifcomb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/infocmp" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/infocmp" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2pdf13" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2pdf13" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2pdf13" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/wftopfa" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/wftopfa" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/wftopfa" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/wmf2fig" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/wmf2fig" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/freetype-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/freetype-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/freetype-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/lprsetup.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/lprsetup.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/lprsetup.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gif2x11" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gif2x11" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifinto" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifinto" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifcolor" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifcolor" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifbg" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifbg" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifovly" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifovly" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/giffiltr" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/giffiltr" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/tic" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/tic" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gif2rgb" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gif2rgb" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/gifburst" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifburst" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifburst" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/gslj" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gslj" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gslj" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/wrjpgcom" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/wrjpgcom" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/pfbtopfa" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/pfbtopfa" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/pfbtopfa" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2ps2" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2ps2" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2ps2" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifclip" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifclip" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2pdf12" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2pdf12" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2pdf12" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifhisto" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifhisto" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifclrmp" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifclrmp" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/libwmf-fontmap" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/libwmf-fontmap" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/libwmf-fontmap" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/wmf2svg" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/wmf2svg" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/dvipdf" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/dvipdf" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/dvipdf" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/openssl" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/openssl" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/openssl" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifwedge" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifwedge" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/djpeg" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/djpeg" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/eps2eps" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/eps2eps" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/eps2eps" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2ascii" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2ascii" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2ascii" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gif2epsn" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gif2epsn" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gs" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gs" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/pv.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/pv.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/pv.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifflip" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifflip" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/iconv" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/iconv" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/bdftops" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/bdftops" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/bdftops" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifinter" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifinter" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/toe" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/toe" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifrotat" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifrotat" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/gsnd" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gsnd" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gsnd" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/unix-lpr.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/unix-lpr.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/unix-lpr.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/icon2gif" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/icon2gif" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifspnge" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifspnge" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/gslp" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gslp" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gslp" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/gsdj500" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gsdj500" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gsdj500" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/tset" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/tset" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/tack" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/tack" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifasm" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifasm" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/jpegtran" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/jpegtran" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/clear" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/clear" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2pdf14" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2pdf14" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2pdf14" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/pdfopt" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/pdfopt" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/pdfopt" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/raw2gif" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/raw2gif" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/libwmf-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/libwmf-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/libwmf-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2pdf" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2pdf" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2pdf" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/giftext" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/giftext" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/ps2ps" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/ps2ps" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/ps2ps" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/gifcompose" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifcompose" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifcompose" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gifinfo" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gifinfo" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libgif.so.4.1.6" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libgif.so.4.1.6" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libwmf-0.2.so.7.1.0" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libwmf-0.2.so.7.1.0" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libjpeg.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libjpeg.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libjpeg.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libstdc++.so.5.0.3" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libstdc++.so.5.0.3" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libwmflite.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libwmflite.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libwmflite.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libwmf.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libwmf.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libwmf.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/libhistory.so.5.2" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libhistory.so.5.2" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/libreadline.so.5.2" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libreadline.so.5.2" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libfreetype.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libfreetype.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libfreetype.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libpng.so.3.24.0" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libpng.so.3.24.0" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libgif.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libgif.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libgif.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libjpeg.so.62.0.0" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libjpeg.so.62.0.0" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/libcrypto.so.0.9.8" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libcrypto.so.0.9.8" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libpng12.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libpng12.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libpng12.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libpng12.so.0.24.0" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libpng12.so.0.24.0" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/libssl.so.0.9.8" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libssl.so.0.9.8" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libfreetype.so.6.3.15" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libfreetype.so.6.3.15" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libgmp.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libgmp.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libsureware.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libsureware.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libubsec.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libubsec.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libaep.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libaep.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libcapi.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libcapi.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/lib4758cca.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/lib4758cca.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libatalla.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libatalla.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libchil.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libchil.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libnuron.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libnuron.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/common/lib/engines/libcswift.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/engines/libcswift.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libwmflite-0.2.so.7.0.1" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libwmflite-0.2.so.7.0.1" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libz.so.1.2.3" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libz.so.1.2.3" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libMagickCore.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libMagickCore.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libMagickCore.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libMagickWand.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libMagickWand.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libMagickWand.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/libMagick++.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libMagick++.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libMagick++.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/filters/analyze.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/filters/analyze.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/filters/analyze.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/filters/analyze.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/filters/analyze.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/x.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/x.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/x.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sfw.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sfw.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sfw.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/yuv.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/yuv.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/yuv.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vicar.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vicar.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cut.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cut.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xps.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xps.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xps.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wpg.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wpg.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wpg.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mat.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mat.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mat.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rle.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rle.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mtv.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mtv.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/inline.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/inline.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/inline.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/stegano.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/stegano.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avi.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avi.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avi.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/caption.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/caption.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/art.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/art.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xwd.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xwd.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dds.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dds.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sct.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sct.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/stegano.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/stegano.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/stegano.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/null.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/null.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/jpeg.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/jpeg.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcd.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcd.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dib.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dib.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/otb.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/otb.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/otb.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cip.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cip.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cip.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pix.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pix.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/psd.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/psd.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/psd.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rle.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rle.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rle.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dng.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dng.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dng.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps3.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps3.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps3.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fits.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fits.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fits.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pwp.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pwp.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dcm.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dcm.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dcm.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/scr.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/scr.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/scr.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vicar.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vicar.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vicar.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mat.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mat.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdf.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdf.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpc.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpc.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpc.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pix.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pix.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pix.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/thumbnail.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/thumbnail.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/map.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/map.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/map.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uil.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uil.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dot.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dot.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dot.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcx.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcx.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcx.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sfw.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sfw.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpeg.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpeg.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ipl.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ipl.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ipl.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcd.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcd.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcd.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/clip.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/clip.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sct.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sct.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sct.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dib.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dib.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dib.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dds.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dds.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dds.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps2.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps2.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps2.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fax.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fax.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fax.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/art.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/art.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/art.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mono.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mono.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rla.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rla.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dng.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dng.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/icon.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/icon.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/otb.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/otb.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/raw.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/raw.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/raw.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rgb.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rgb.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rgb.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcl.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcl.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gradient.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gradient.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wbmp.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wbmp.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wbmp.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rgb.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rgb.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/icon.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/icon.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/icon.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/msl.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/msl.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/msl.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/preview.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/preview.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/matte.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/matte.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uyvy.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uyvy.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps3.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps3.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/svg.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/svg.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tga.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tga.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tga.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dot.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dot.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/histogram.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/histogram.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/magick.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/magick.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/magick.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/viff.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/viff.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps2.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps2.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/braille.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/braille.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avs.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avs.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdf.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdf.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdf.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ps.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xcf.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xcf.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcl.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcl.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcl.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xbm.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xbm.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/braille.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/braille.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/braille.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/svg.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/svg.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/svg.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sgi.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sgi.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sgi.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sgi.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sgi.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/miff.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/miff.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/miff.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/meta.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/meta.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/meta.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/caption.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/caption.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/caption.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dps.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dps.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dps.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/html.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/html.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/html.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fits.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fits.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/msl.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/msl.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dps.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dps.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tim.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tim.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tim.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wmf.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wmf.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rla.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rla.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/rla.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pnm.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pnm.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pnm.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpeg.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpeg.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpeg.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mono.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mono.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mono.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pict.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pict.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pict.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tile.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tile.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tile.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/txt.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/txt.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/txt.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/hrz.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/hrz.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/hrz.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wpg.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wpg.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/x.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/x.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cmyk.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cmyk.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cmyk.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wbmp.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wbmp.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdb.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdb.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/url.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/url.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/url.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/psd.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/psd.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dcm.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dcm.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tim.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tim.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avi.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avi.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ttf.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ttf.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/palm.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/palm.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/scr.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/scr.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/bmp.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/bmp.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/bmp.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dpx.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dpx.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cin.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cin.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cin.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cin.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cin.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ycbcr.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ycbcr.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pattern.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pattern.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpc.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpc.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pict.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pict.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdb.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdb.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pdb.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/map.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/map.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xc.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xc.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpr.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpr.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cmyk.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cmyk.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/url.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/url.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dpx.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dpx.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/dpx.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mvg.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mvg.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mvg.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xpm.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xpm.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xpm.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xps.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xps.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/magick.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/magick.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/jpeg.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/jpeg.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/jpeg.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/png.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/png.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/png.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/palm.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/palm.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/palm.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/clip.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/clip.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/clip.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/html.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/html.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tga.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tga.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avs.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avs.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/avs.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wmf.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wmf.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/wmf.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/preview.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/preview.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/preview.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/label.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/label.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/label.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/label.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/label.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/info.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/info.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/miff.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/miff.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/inline.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/inline.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/matte.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/matte.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/matte.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pwp.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pwp.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pwp.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcx.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pcx.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/plasma.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/plasma.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/plasma.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/raw.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/raw.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/null.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/null.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/null.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uil.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uil.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uil.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cip.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cip.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pnm.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pnm.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gif.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gif.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gif.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/meta.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/meta.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xwd.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xwd.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xwd.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pattern.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pattern.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/pattern.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uyvy.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uyvy.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/uyvy.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/png.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/png.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/thumbnail.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/thumbnail.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/thumbnail.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xpm.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xpm.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mtv.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mtv.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mtv.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xbm.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xbm.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xbm.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ycbcr.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ycbcr.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ycbcr.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/bmp.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/bmp.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vid.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vid.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/yuv.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/yuv.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/info.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/info.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/info.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xc.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xc.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xc.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/hrz.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/hrz.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vid.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vid.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/vid.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mvg.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mvg.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gif.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gif.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/plasma.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/plasma.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ipl.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ipl.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tile.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/tile.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xcf.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xcf.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/xcf.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/viff.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/viff.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/viff.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gray.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gray.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpr.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpr.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/mpr.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sun.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sun.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gray.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gray.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gray.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ttf.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ttf.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/ttf.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sun.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sun.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/sun.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/histogram.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/histogram.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/histogram.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/txt.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/txt.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fax.so" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/fax.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cut.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cut.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/cut.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gradient.la" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gradient.la" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/ImageMagick-6.5.1/modules-Q16/coders/gradient.la" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libMagick++.so.2.0.0" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libMagick++.so.2.0.0" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libMagickCore.so.2.0.0" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libMagickCore.so.2.0.0" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/lib/libMagickWand.so.2.0.0" >
                           <ruleList>
                              <fileTest path="${installdir}/common/lib/libMagickWand.so.2.0.0" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.display.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.display.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/Magick++-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/Magick++-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/Magick++-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.compare.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.compare.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.stream.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.stream.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/stream" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/stream" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/stream" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.identify.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.identify.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/display" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/display" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/display" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.convert.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.convert.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.conjure.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.conjure.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/compare" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/compare" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/compare" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/identify" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/identify" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/identify" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/Wand-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/Wand-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/Wand-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.animate.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.animate.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/import" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/import" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/import" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/conjure" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/conjure" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/conjure" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/Magick-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/Magick-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/Magick-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/MagickWand-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/MagickWand-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/MagickWand-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/animate" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/animate" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/animate" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/convert" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/convert" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/convert" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/composite" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/composite" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/composite" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.mogrify.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.mogrify.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.montage.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.montage.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.composite.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.composite.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/mogrify" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/mogrify" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/mogrify" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.import.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.import.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/MagickCore-config" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/MagickCore-config" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/MagickCore-config" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/montage" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/montage" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/montage" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.swfrender.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.swfrender.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/jpeg2swf" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/jpeg2swf" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/jpeg2swf" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/swfrender" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/swfrender" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/swfrender" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.swfextract.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.swfextract.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.swfcombine.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.swfcombine.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.wav2swf.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.wav2swf.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.jpeg2swf.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.jpeg2swf.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/png2swf" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/png2swf" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/png2swf" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/as3compile" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/as3compile" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/as3compile" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.swfbbox.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.swfbbox.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/swfdump" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/swfdump" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/swfdump" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/swfstrings" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/swfstrings" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/swfstrings" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/swfcombine" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/swfcombine" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/swfcombine" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.png2swf.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.png2swf.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/font2swf" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/font2swf" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/font2swf" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/gif2swf" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/gif2swf" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.as3compile.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.as3compile.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.swfdump.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.swfdump.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.font2swf.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.font2swf.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/swfbbox" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/swfbbox" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/swfbbox" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/pdf2swf" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/pdf2swf" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/pdf2swf" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.pdf2swf.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.pdf2swf.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.swfc.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.swfc.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00755" files="${installdir}/common/bin/.swfstrings.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/.swfstrings.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/swfc" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/swfc" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/swfc" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/swfextract" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/swfextract" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/swfextract" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/common/bin/wav2swf" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/common/bin/wav2swf" >
                           <ruleList>
                              <fileTest path="${installdir}/common/bin/wav2swf" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/gengalrc" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/gengalrc" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/gengalrc" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/pagein" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/pagein" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/python.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/python.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/kde-open-url" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/kde-open-url" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/kde-open-url" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/unpack_update" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/unpack_update" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/unpack_update" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/gengal" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/gengal" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/gengal" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/testtool.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/testtool.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/uri-encode" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/uri-encode" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/spadmin.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/spadmin.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/cde-open-url" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/cde-open-url" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/cde-open-url" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/hid.lst" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/hid.lst" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/hid.lst" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/open-url" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/open-url" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/open-url" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/testtoolrc" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/testtoolrc" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/testtoolrc" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/nsplugin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/nsplugin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/pluginapp.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/pluginapp.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/senddoc" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/senddoc" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/senddoc" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/gengal.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/gengal.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/gnome-open-url" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/gnome-open-url" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/gnome-open-url" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/basis3.2/program/stclient_wrapper" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/stclient_wrapper" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/stclient_wrapper" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/basis3.2/program/gnome-open-url.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/basis3.2/program/gnome-open-url.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/scripts/ctl.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00755" files="${installdir}/openoffice/scripts/ctl.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/scripts/ctl.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/ure/bin/uno.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/ure/bin/uno.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/ure/bin/startup.sh" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/ure/bin/startup.sh" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/ure/bin/startup.sh" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/ure/bin/javaldx" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/ure/bin/javaldx" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/ure/bin/regmerge" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/ure/bin/regmerge" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/ure/bin/regcomp.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/ure/bin/regcomp.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/ure/bin/regview" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/ure/bin/regview" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/crash_report.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/crash_report.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/unopkg" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/unopkg" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/unopkg" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/unopkg.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/unopkg.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/unoinfo" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/unoinfo" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/unoinfo" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/spadmin" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/spadmin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/spadmin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/python" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/python" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/python" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/soffice" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/soffice" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/soffice" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/crash_report" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/crash_report" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/crash_report" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/sbase" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/sbase" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/sbase" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/sdraw" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/sdraw" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/sdraw" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/smath" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/smath" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/smath" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/scalc" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/scalc" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/scalc" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/libnpsoplugin.so" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/libnpsoplugin.so" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/soffice.bin" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/soffice.bin" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/simpress" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/simpress" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/simpress" condition="exists" />
                           </ruleList>
                        </changePermissions>
                        <dos2unix files="${installdir}/openoffice/program/swriter" abortOnError="0" showMessageOnError="0" />
                         
                        <changePermissions permissions="00555" files="${installdir}/openoffice/program/swriter" >
                           <ruleList>
                              <fileTest path="${installdir}/openoffice/program/swriter" condition="exists" />
                           </ruleList>
                        </changePermissions> 
        <changePermissions permissions="0755" files="${installdir}/*.sh" />
        <changePermissions permissions="0755" files="${installdir}/*/*.sh" />
        <changePermissions permissions="0755" files="${installdir}/*/*/*.sh" />
        </actionList>
        </actionDefinition>
    </functionDefinitionList>
    <postInstallationActionList>       
	 <postgresCreateSymLinksLinuxBuildingFromWindows>
	    <ruleList>
              <platformTest type="linux" />
	    </ruleList>
	 </postgresCreateSymLinksLinuxBuildingFromWindows>
    </postInstallationActionList>
</component>
