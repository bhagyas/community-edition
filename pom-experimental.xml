<!-- ********************************************************* -->
<!-- **              Alfresco Parent POM                    ** -->
<!-- **                                                     ** -->
<!-- ** This Maven build is NOT usable to build Alfresco,   ** -->
<!-- ** you should use the standard Ant build for that.     ** -->
<!-- ** This POM is instead used to produce POMs to develop ** -->
<!-- ** against Alfresco with Maven. POMs, dependencies and ** -->
<!-- ** projects information are up to date and released    ** -->
<!-- ** together with the official Alfresco artifacts at    ** -->
<!---**          https://artifacts.alfresco.com.            ** -->  
<!---** Fox the SDK and Maven project samples check         ** -->
<!---** http://code.google.com/p/maven-alfresco-archetypes/ ** -->  
<!-- ********************************************************* -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>org.alfresco</groupId>
  <artifactId>alfresco-parent</artifactId>
  <packaging>pom</packaging>
  <version>4.2.d-SNAPSHOT</version>
  <name>Alfresco Parent Project</name>

  <url>http://www.alfresco.org/</url>
  <inceptionYear>2005</inceptionYear>
  <organization>
    <name>Alfresco Software</name>
    <url>http://www.alfresco.org/</url>
  </organization>
  <licenses>
    <license>
      <name>${maven.license.name}</name>
      <url>${maven.license.url}</url>
    </license>
  </licenses>
  <scm>
    <connection>${maven.scm.connection}</connection>
    <developerConnection>${maven.scm.developerConnection}</developerConnection>
    <url>${maven.scm.url}</url>
  </scm>
  <issueManagement>
    <system>JIRA</system>
    <url>https://issues.alfresco.com/jira/browse/ALF</url>
  </issueManagement>
  <ciManagement>
    <system>Bamboo</system>
    <url>https://bamboo.alfresco.com/bamboo/browse/ALF</url>
  </ciManagement>

  <prerequisites>
    <maven>3.0.3</maven>
  </prerequisites>

  <repositories>
    <!-- Pointing to Alfresco repository group. Value is switched between community and enterprise -->
    <repository>
      <id>alfresco-internal</id>
      <url>${maven.repository.url}</url>
    </repository>
    <!-- Snapshot repository for Spring Surf -->
    <repository>
        <id>surf-snapshots</id>
        <url>http://extensions.springframework.org/snapshot/</url>
        <snapshots>
            <enabled>true</enabled>
        </snapshots>
        <releases>
            <enabled>false</enabled>
        </releases>
    </repository>
  </repositories>

  <distributionManagement>
      <!-- For now internal releases repositories -->
      <repository>
          <id>alfresco-internal</id>
          <url>${maven.distributionManagement.url}</url>
      </repository>
      <!-- For now internal snapshot repositories -->
      <snapshotRepository>
          <id>alfresco-internal-snapshots</id>
          <url>${maven.distributionManagement.snapshot.url}</url>
      </snapshotRepository>      
      <site>      
          <id>alfresco-site</id>
          <name>Alfresco Maven site</name>
          <url>http://localhost/</url>
      </site>      
  </distributionManagement>

  <modules>
    <module>projects/core</module>
    <module>projects/data-model</module>
    <module>projects/alfresco-jlan</module>
    <module>projects/mbeans</module>
    <module>projects/deployment</module>
    <module>projects/repository</module>
    <module>projects/wdr-deployment</module>
    <module>projects/remote-api</module>
    <module>projects/web-framework-commons</module>
    <module>projects/jndi-client</module>
    <module>projects/catalina-virtual</module>
    <module>projects/web-client</module>
    <module>projects/web-service-client</module>
    <module>projects/slingshot</module>
    <module>projects/web-editor</module>
    <module>projects/web-editor-plugin</module>
    <module>projects/solr</module>
    <module>projects/file-transfer-receiver</module>
    <!-- Currently being worked out... see BDE-118
    <module>projects/system-build-test</module>
    -->
    <module>modules/sharepoint/amp</module>
    <module>modules/wcmquickstart/wcmquickstartmodule</module>
    <module>modules/wcmquickstart/wcmquickstartclientapi</module>
    <module>modules/wcmquickstart/wcmquickstartwebsite</module>
    <module>projects/web-editor-samples/customer-site</module>
  </modules>

  <properties>
    <!-- Properties related to the legacy source layout from the Ant build. Will progressively go away with the re-shuffling of SVN tree -->
    <legacy.sources.folder>source/java</legacy.sources.folder>
    <legacy.resources.folder>config</legacy.resources.folder>
    <legacy.metainf.folder>source/meta-inf</legacy.metainf.folder>
    <legacy.test.resources.folder>source/test-resources</legacy.test.resources.folder>
    <legacy.web.resources.folder>source/web</legacy.web.resources.folder>
    <!--  In order not to move legacy files we make the maven layout flexible on the base folder. 
        | The following set of properties define the actual maven build folder locations. 
        | Customizing maven.build.layout.base.folder allow to switch the layout, see the legacy-layout profile for an example.  
        -->
    <maven.build.layout.base.folder>${project.basedir}</maven.build.layout.base.folder>
    <maven.build.layout.src.main.folder>${maven.build.layout.base.folder}/src/main/java</maven.build.layout.src.main.folder>
    <maven.build.layout.src.test.folder>${maven.build.layout.base.folder}/src/test/java</maven.build.layout.src.test.folder>
    <maven.build.layout.resources.main.folder>${maven.build.layout.base.folder}/src/main/resources</maven.build.layout.resources.main.folder>
    <maven.build.layout.resources.test.folder>${maven.build.layout.base.folder}/src/test/resources</maven.build.layout.resources.test.folder>
    <maven.build.layout.web.main.folder>${maven.build.layout.base.folder}/src/main/webapp</maven.build.layout.web.main.folder>
    <maven.build.layout.jibx.bindings.folder>${maven.build.layout.resources.main.folder}/org/alfresco/repo/dictionary</maven.build.layout.jibx.bindings.folder>

    <!-- Database properties - default values to be overridden in settings.xml -->
    <db.skip>false</db.skip>
    <db.driver>org.postgresql.Driver</db.driver>
    <db.name>alfresco</db.name>
    <db.url>jdbc:postgresql:${db.name}</db.url>
    <db.master.url>jdbc:postgresql:template1</db.master.url>
    <db.username>alfresco</db.username>
    <db.password>alfresco</db.password>

    <!-- Maven specific build properties -->
    <maven.build.sourceVersion>1.6</maven.build.sourceVersion>
    <maven.build.filtering.enabled>false</maven.build.filtering.enabled>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <!-- Sonar specific properties -->
    <sonar.jacoco.reportPath>${project.build.directory}/jacoco.exec</sonar.jacoco.reportPath>
    <sonar.exclusions></sonar.exclusions>
    <sonar.skippedModules></sonar.skippedModules>
    <sonar.branch>HEAD</sonar.branch>

    <!-- Community build specific properties -->
    <maven.scm.connection>scm:svn:http://svn.alfresco.com/repos/alfresco-open-mirror/alfresco/HEAD</maven.scm.connection>
    <maven.scm.developerConnection>scm:svn:https://svn.alfresco.com/repos/alfresco-enterprise/alfresco/HEAD</maven.scm.developerConnection>
    <maven.scm.url>https://fisheye.alfresco.com/changelog/alfresco-enterprise</maven.scm.url>
    <maven.repository.url>https://artifacts.alfresco.com/nexus/content/groups/public</maven.repository.url>
    <maven.distributionManagement.snapshot.url>https://artifacts.alfresco.com/nexus/content/repositories/snapshots</maven.distributionManagement.snapshot.url>
    <maven.distributionManagement.url>https://artifacts.alfresco.com/nexus/content/repositories/releases</maven.distributionManagement.url>
    <maven.license.name>GNU Lesser General Public License v3.0 or later</maven.license.name>
    <maven.license.url>http://www.gnu.org/licenses/lgpl-3.0-standalone.html</maven.license.url>

    <!-- Centralized dependency versions -->
    <dependency.lucene.version>2.4.1</dependency.lucene.version>
    <dependency.jibx.version>1.2.3</dependency.jibx.version>
    <dependency.tika.version>1.3-20121218</dependency.tika.version>
    <dependency.opencmis.version>0.8.0</dependency.opencmis.version>
    <dependency.antlr.version>3.4</dependency.antlr.version>
    <dependency.junit.version>4.11</dependency.junit.version>
    <dependency.spring.version>3.0.5.RELEASE</dependency.spring.version>
    <dependency.surf.version>1.2.0-M3</dependency.surf.version>
    <dependency.activiti.version>5.11-alf-20130104</dependency.activiti.version>
    <dependency.poi.version>3.9-beta1-20121109</dependency.poi.version>
  </properties>
  
  <dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit-dep</artifactId>
            <version>${dependency.junit.version}</version>
        </dependency>    
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${dependency.junit.version}</version>
        </dependency>    
    </dependencies>
  </dependencyManagement>

  <build>                  
    <!-- This is adapted to work on on-the-fly generated maven project layout. See maven-resources-plugin configurations below. -->
    <sourceDirectory>${maven.build.layout.src.main.folder}</sourceDirectory>
    <testSourceDirectory>${maven.build.layout.src.test.folder}</testSourceDirectory>
    <resources>
        <resource>
            <directory>${maven.build.layout.resources.main.folder}</directory>
            <filtering>${maven.build.filtering.enabled}</filtering>
        </resource>
    </resources>
    <testResources>
        <testResource>
             <directory>${maven.build.layout.resources.test.folder}</directory> 
             <filtering>${maven.build.filtering.enabled}</filtering>
        </testResource>
    </testResources>

    <plugins>
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-enforcer-plugin</artifactId>
            <version>1.2</version>
            <executions>
                <execution>
                    <id>enforce-java</id>
                    <goals>
                        <goal>enforce</goal>
                    </goals>
                    <configuration>
                        <rules>
                            <requireJavaVersion>
                                <version>1.7.0</version>
                            </requireJavaVersion>
                        </rules>    
                    </configuration>
                </execution>
            </executions>
        </plugin>
    </plugins>

    <!-- Defining version and some configuration of Maven plugins -->
    <pluginManagement>
        <plugins>
            <plugin>
                <artifactId>maven-clean-plugin</artifactId>
                <version>2.5</version>
            </plugin>
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.0</version>
                <configuration>
                    <source>${maven.build.sourceVersion}</source>
                    <target>${maven.build.sourceVersion}</target>
                </configuration>        
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <version>2.7</version>
            </plugin>
            <plugin>
                <artifactId>maven-install-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <artifactId>maven-resources-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <artifactId>maven-site-plugin</artifactId>
                <version>3.2</version>
            </plugin>
            <plugin>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.6</version>
            </plugin>
            <plugin>
                <artifactId>maven-help-plugin</artifactId>
                <version>2.1.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <artifactId>maven-source-plugin</artifactId>
                <version>2.2.1</version>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>2.13</version>
            </plugin>
            <plugin>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.13</version>
                <configuration>
                    <!-- To prevent tests alfresco.log to be created in project roots and bother while synchronizing with SCM -->
                    <workingDirectory>${project.build.directory}</workingDirectory>
                    <redirectTestOutputToFile>true</redirectTestOutputToFile>
                    <runOrder>alphabetical</runOrder>
                    <argLine>-Xmx1024m -XX:MaxPermSize=256m -Duser.language=en</argLine>
                    <systemPropertyVariables>
                        <!-- Modified BaseTest and AVMServiceTestBase to accept these properties
                         Otherwise test were looking in hardcoded relative locations -->
                        <alfresco.test.resources.dir>${maven.build.layout.resources.test.folder}</alfresco.test.resources.dir>
                        <alfresco.web.resources.dir>${maven.build.layout.web.main.folder}</alfresco.web.resources.dir>
                        <alfresco.java.sources.dir>${maven.build.layout.src.main.folder}</alfresco.java.sources.dir>
                        <!-- Database related properties -->
                        <db.url>${db.url}</db.url>
                        <db.driver>${db.driver}</db.driver>
                        <db.name>${db.name}</db.name>
                        <db.username>${db.username}</db.username>
                        <db.password>${db.password}</db.password>
                        <dir.root>${basedir}/target/alf_test_data</dir.root>
                    </systemPropertyVariables>
                </configuration>
            </plugin>
            <plugin>
                <artifactId>maven-javadoc-plugin</artifactId>
                <version>2.9</version>
            </plugin>
            <plugin>
                <artifactId>maven-eclipse-plugin</artifactId>
                <version>2.9</version>
            </plugin>
            <plugin>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
            </plugin>
            <plugin>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version>
                <configuration>
                    <warSourceDirectory>${maven.build.layout.web.main.folder}</warSourceDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.mortbay.jetty</groupId>
                <artifactId>jetty-maven-plugin</artifactId>
                <version>7.0.2.v20100331</version>
                <configuration>
                    <webAppSourceDirectory>${maven.build.layout.web.main.folder}</webAppSourceDirectory>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.tomcat.maven</groupId>
                <artifactId>tomcat7-maven-plugin</artifactId>
                <version>2.0</version>
            </plugin>
            <plugin>
                <groupId>org.antlr</groupId>
                <artifactId>antlr3-maven-plugin</artifactId>
                <version>${dependency.antlr.version}</version>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>sql-maven-plugin</artifactId>
                <version>1.5</version>
                <configuration>
                    <skip>${db.skip}</skip>
                    <autocommit>true</autocommit>
                    <driver>${db.driver}</driver>
                    <url>${db.master.url}</url>
                    <username>${db.username}</username>
                    <password>${db.password}</password>
                </configuration>
                <dependencies>
                    <dependency>
                        <groupId>postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <version>9.1-901.jdbc4</version>
                    </dependency>
                    <dependency>
                        <groupId>mysql</groupId>
                        <artifactId>mysql-connector-java</artifactId>
                        <version>5.1.14</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>versions-maven-plugin</artifactId>
                <version>2.0</version>
            </plugin>
        </plugins>
    </pluginManagement>
  </build>

  <reporting>
    <plugins>
        <plugin>
            <artifactId>maven-site-plugin</artifactId>
            <version>3.2</version>
        </plugin>
        <plugin>
            <artifactId>maven-project-info-reports-plugin</artifactId>
            <version>2.6</version>
            <configuration>
                <dependencyLocationsEnabled>false</dependencyLocationsEnabled>
            </configuration>
            <reportSets>
              <reportSet>
                <reports>
                  <report>index</report>
                  <report>summary</report>
                  <report>dependencies</report>
                  <report>dependency-convergence</report>
                  <report>dependency-management</report>
                  <report>license</report>
                  <report>modules</report>
                </reports>
              </reportSet>
            </reportSets>
        </plugin>
        <plugin>
            <artifactId>maven-surefire-report-plugin</artifactId>
            <version>2.13</version>
        </plugin>
        <plugin>
            <artifactId>maven-pmd-plugin</artifactId>
            <version>2.7.1</version>
            <configuration>
                <targetJdk>${maven.build.sourceVersion}</targetJdk>
            </configuration>
        </plugin>
        <plugin>
            <artifactId>maven-jxr-plugin</artifactId>
            <version>2.3</version>
            <configuration>
                <aggregate>false</aggregate>
            </configuration>
        </plugin>
        <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>findbugs-maven-plugin</artifactId>
            <version>2.5.2</version>
        </plugin>
    </plugins>
  </reporting>

  <profiles>
    <!--  
        | Profile automatically activated when the legacy source layout (either /source or /config) is detected.
        | Automatically takes care of creating a fake maven project layout in ${maven.build.layout.base.folder}
        | and configuring the build accordingly. 
        | TODO: Disable this when standard Maven layout is adopted for sources. Will automatically switch to 
        | a standard Maven build in case source and config is deleted
        -->
    <profile>
        <id>legacy-layout</id>
        <activation>
            <file>
                <exists>source</exists>
            </file>
        </activation>
        <!-- This shifts the project base folder to the generated fake maven layout -->
        <properties>
            <maven.build.layout.base.folder>${project.build.directory}/maven-layout</maven.build.layout.base.folder>
        </properties>  
        <build>
            <plugins>
                <plugin>
                    <!-- Using copy-resources creates a "fake" maven project layout in ${maven.build.layout.base.folder} -->
                    <artifactId>maven-resources-plugin</artifactId>
                    <executions>
                        <execution>
                            <id>copy-main-sources</id>
                            <phase>validate</phase>
                            <goals><goal>copy-resources</goal></goals>
                            <configuration>
                                <outputDirectory>${maven.build.layout.src.main.folder}</outputDirectory>
                                <resources>          
                                    <resource>
                                        <directory>${legacy.sources.folder}</directory>
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                        <includes>
                                            <include>**/*.java</include>
                                        </includes>
                                        <excludes>
                                            <exclude>**/AbstractTest*.java</exclude>
                                            <exclude>**/gUnitExecutor.java</exclude>
                                            <exclude>**/LocalWebScriptConnectorServiceImpl.java</exclude>
                                            <exclude>**/Test*.java</exclude>
                                            <exclude>**/UnitTest*.java</exclude>
                                            <exclude>**/MockClass*.java</exclude>
                                            <exclude>**/MockedTest*.java</exclude>
                                            <exclude>**/*Test.java</exclude>
                                            <exclude>**/*Test_.java</exclude>
                                            <exclude>**/*Tester.java</exclude>
                                            <exclude>**/*TestingUtils.java</exclude>
                                            <exclude>**/*Tests.java</exclude>
                                            <exclude>**/*TestBase.java</exclude>
                                            <exclude>**/*TestCase.java</exclude>
                                            <exclude>**/*TestCases.java</exclude>
                                            <exclude>**/*TestData.java</exclude>
                                            <exclude>**/*TestHelper.java</exclude>
                                            <exclude>**/*TestHuge.java</exclude>
                                            <exclude>**/*TestInterface.java</exclude>
                                            <exclude>**/*TestP.java</exclude>
                                            <exclude>**/*TestSuite.java</exclude>
                                            <exclude>**/test/**/*.java</exclude>
                                            <exclude>**/tck/*.java</exclude>
                                            <!-- Generated code in data-model, now taken care of by antlr3 -->
                                            <exclude>**/org/alfresco/repo/search/impl/parsers/CMIS*er.java</exclude>
                                            <exclude>**/org/alfresco/repo/search/impl/parsers/FTSLexer.java</exclude>
                                            <exclude>**/org/alfresco/repo/search/impl/parsers/FTSParser.java</exclude>
                                        </excludes>
                                    </resource>
                                </resources> 
                            </configuration>
                        </execution>
                        <!-- Repository needs a file named Test* in src/main/java -->
                        <execution>
                            <id>copy-TestModeable</id>
                            <phase>validate</phase>
                            <goals><goal>copy-resources</goal></goals>
                            <configuration>
                                <outputDirectory>${maven.build.layout.src.main.folder}</outputDirectory>
                                <resources>          
                                    <resource>
                                        <directory>${legacy.sources.folder}</directory>
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                        <includes>
                                            <include>org/alfresco/repo/action/executer/TestModeable.java</include>
                                        </includes>
                                    </resource>
                                </resources> 
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-test-sources</id>
                            <phase>validate</phase>
                            <goals><goal>copy-resources</goal></goals>
                            <configuration>
                                <outputDirectory>${maven.build.layout.src.test.folder}</outputDirectory>
                                <resources>          
                                    <resource>
                                        <directory>${legacy.sources.folder}</directory>
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                        <includes>
                                            <include>**/AbstractTest*.java</include>
                                            <include>**/gUnitExecutor.java</include>
                                            <include>**/LocalWebScriptConnectorServiceImpl.java</include>
                                            <include>**/Test*.java</include>
                                            <include>**/UnitTest*.java</include>
                                            <include>**/MockClass*.java</include>
                                            <include>**/MockedTest*.java</include>
                                            <include>**/*Test.java</include>
                                            <include>**/*Test_.java</include>
                                            <include>**/*Tester.java</include>
                                            <include>**/*TestingUtils.java</include>
                                            <include>**/*Tests.java</include>
                                            <include>**/*TestBase.java</include>
                                            <include>**/*TestCase.java</include>
                                            <include>**/*TestCases.java</include>
                                            <include>**/*TestData.java</include>
                                            <include>**/*TestHelper.java</include>
                                            <include>**/*TestHuge.java</include>
                                            <include>**/*TestInterface.java</include>
                                            <include>**/*TestP.java</include>
                                            <include>**/*TestSuite.java</include>
                                            <include>**/test/**/*.java</include>
                                            <include>**/tck/*.java</include>
                                        </includes>
                                        <excludes>
                                            <exclude>org/alfresco/repo/action/executer/TestModeable.java</exclude>
                                        </excludes>
                                    </resource>
                                </resources> 
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-main-resources</id>
                            <phase>validate</phase>
                            <goals><goal>copy-resources</goal></goals>
                            <configuration>
                                <outputDirectory>${maven.build.layout.resources.main.folder}</outputDirectory>
                                <resources>          
                                    <resource>
                                        <directory>${legacy.resources.folder}</directory>
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                        <excludes>
                                            <exclude>test/**</exclude>
                                        </excludes>
                                    </resource>
                                    <resource>
                                        <directory>${legacy.metainf.folder}</directory>
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                        <targetPath>META-INF</targetPath>
                                    </resource>
                                    <resource>
                                        <directory>${legacy.sources.folder}</directory>
                                        <excludes>
                                            <exclude>**/*.java</exclude>
                                        </excludes>
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                    </resource>    
                                </resources> 
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-test-resources</id>
                            <phase>validate</phase>
                            <goals><goal>copy-resources</goal></goals>
                            <configuration>
                                <outputDirectory>${maven.build.layout.resources.test.folder}</outputDirectory>
                                <resources>          
                                    <resource>
                                        <directory>${legacy.test.resources.folder}</directory> 
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                    </resource>
                                    <resource>
                                        <directory>${legacy.resources.folder}</directory> 
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                        <includes>
                                            <include>test/**</include>
                                        </includes>
                                    </resource>
                                </resources> 
                            </configuration>
                        </execution>
                        <execution>
                            <id>copy-webapp-resources</id>
                            <phase>validate</phase>
                            <goals><goal>copy-resources</goal></goals>
                            <configuration>
                                <outputDirectory>${maven.build.layout.web.main.folder}</outputDirectory>
                                <resources>          
                                    <resource>
                                        <directory>${legacy.web.resources.folder}</directory> 
                                        <filtering>${maven.build.filtering.enabled}</filtering>
                                    </resource>
                                </resources> 
                            </configuration>
                        </execution>
                    </executions>    
                </plugin>                            
            </plugins>
        </build>
    </profile>
    <!-- Profile to build alfresco-enterprise -->
    <profile>
        <id>enterprise</id>
        <modules>
            <module>enterpriseprojects/repository</module>
            <module>enterpriseprojects/remote-api</module>
        </modules>
        <properties>
            <!-- Enterprise specific properties -->
            <maven.scm.connection>scm:svn:http://svn.alfresco.com/repos/alfresco-open-mirror/alfresco/HEAD</maven.scm.connection>
            <maven.scm.developerConnection>scm:svn:https://svn.alfresco.com/repos/alfresco-enterprise/alfresco/HEAD</maven.scm.developerConnection>
            <maven.scm.url>https://fisheye.alfresco.com/changelog/alfresco-enterprise</maven.scm.url>
            <maven.repository.url>https://artifacts.alfresco.com/nexus/content/groups/private</maven.repository.url>
            <maven.distributionManagement.snapshot.url>https://artifacts.alfresco.com/nexus/content/repositories/enterprise-snapshots</maven.distributionManagement.snapshot.url>
            <maven.distributionManagement.url>https://artifacts.alfresco.com/nexus/content/repositories/enterprise-releases</maven.distributionManagement.url>
            <maven.license.name>Alfresco Enterprise License</maven.license.name>
            <maven.license.url>http://www.alfresco.com/legal</maven.license.url>
        </properties>
    </profile>
    
  </profiles>

</project>
